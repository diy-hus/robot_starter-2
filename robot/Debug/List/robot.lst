
AVRASM ver. 2.1.30  C:\Users\108\Desktop\robot_starter-2\robot\Debug\List\robot.asm Fri Sep 06 12:20:44 2019

C:\Users\108\Desktop\robot_starter-2\robot\Debug\List\robot.asm(1086): warning: Register r5 already defined by the .DEF directive
C:\Users\108\Desktop\robot_starter-2\robot\Debug\List\robot.asm(1087): warning: Register r4 already defined by the .DEF directive
C:\Users\108\Desktop\robot_starter-2\robot\Debug\List\robot.asm(1088): warning: Register r7 already defined by the .DEF directive
C:\Users\108\Desktop\robot_starter-2\robot\Debug\List\robot.asm(1089): warning: Register r6 already defined by the .DEF directive
C:\Users\108\Desktop\robot_starter-2\robot\Debug\List\robot.asm(1090): warning: Register r9 already defined by the .DEF directive
C:\Users\108\Desktop\robot_starter-2\robot\Debug\List\robot.asm(1091): warning: Register r8 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _Code_tay_cam1=R5
                 	.DEF _dem=R4
                 	.DEF _RC=R7
                 	.DEF _Code_tay_cam2=R6
                 	.DEF _Code_tay_cam3=R9
                 	.DEF _Code_tay_cam4=R8
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c141      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 c164      	RJMP _timer0_ovf_isr
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _font5x7:
000013 0705
000014 6020
000015 0000
000016 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
000017 0000
000018 0400
000019 040a
00001a 0700      	.DB  0x0,0x0,0x0,0x4,0xA,0x4,0x0,0x7
00001b 0700
00001c 1400
00001d 147f
00001e 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
00001f 2a24
000020 2a7f
000021 2312
000022 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000023 6264
000024 4936
000025 2255
000026 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
000027 0305
000028 0000
000029 1c00
00002a 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00002b 0000
00002c 2241
00002d 001c
00002e 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
00002f 2a1c
000030 0808
000031 3e08
000032 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000033 5000
000034 0030
000035 0800
000036 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
000037 0808
000038 3000
000039 0030
00003a 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00003b 0810
00003c 0204
00003d 513e
00003e 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
00003f 003e
000040 7f42
000041 0040
000042 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000043 4951
000044 2146
000045 4541
000046 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
000047 1418
000048 7f12
000049 2710
00004a 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00004b 3945
00004c 4a3c
00004d 4949
00004e 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
00004f 0971
000050 0305
000051 4936
000052 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000053 0636
000054 4949
000055 1e29
000056 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
000057 0036
000058 0000
000059 3656
00005a 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00005b 0800
00005c 2214
00005d 1441
00005e 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
00005f 1414
000060 2241
000061 0814
000062 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000063 5101
000064 0609
000065 4932
000066 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
000067 7e3e
000068 1111
000069 7e11
00006a 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00006b 4949
00006c 3e36
00006d 4141
00006e 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
00006f 417f
000070 2241
000071 7f1c
000072 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
000073 4149
000074 097f
000075 0109
000076 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
000077 4141
000078 3251
000079 087f
00007a 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
00007b 007f
00007c 7f41
00007d 0041
00007e 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
00007f 3f41
000080 7f01
000081 1408
000082 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
000083 407f
000084 4040
000085 7f40
000086 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
000087 7f02
000088 047f
000089 1008
00008a 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
00008b 4141
00008c 3e41
00008d 097f
00008e 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
00008f 3e06
000090 5141
000091 5e21
000092 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
000093 2919
000094 4646
000095 4949
000096 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
000097 0101
000098 017f
000099 3f01
00009a 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
00009b 3f40
00009c 201f
00009d 2040
00009e 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
00009f 1820
0000a0 7f20
0000a1 1463
0000a2 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000a3 0363
0000a4 7804
0000a5 0304
0000a6 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000a7 4549
0000a8 0043
0000a9 7f00
0000aa 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000ab 0402
0000ac 1008
0000ad 4120
0000ae 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000af 0000
0000b0 0204
0000b1 0201
0000b2 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000b3 4040
0000b4 4040
0000b5 0100
0000b6 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000b7 2000
0000b8 5454
0000b9 7854
0000ba 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000bb 4444
0000bc 3838
0000bd 4444
0000be 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000bf 4438
0000c0 4844
0000c1 387f
0000c2 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000c3 1854
0000c4 7e08
0000c5 0109
0000c6 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000c7 5414
0000c8 3c54
0000c9 087f
0000ca 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000cb 0078
0000cc 7d44
0000cd 0040
0000ce 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000cf 3d44
0000d0 0000
0000d1 107f
0000d2 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000d3 4100
0000d4 407f
0000d5 7c00
0000d6 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000d7 7804
0000d8 087c
0000d9 0404
0000da 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000db 4444
0000dc 3844
0000dd 147c
0000de 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000df 0808
0000e0 1414
0000e1 7c18
0000e2 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000e3 0404
0000e4 4808
0000e5 5454
0000e6 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000e7 3f04
0000e8 4044
0000e9 3c20
0000ea 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
0000eb 7c20
0000ec 201c
0000ed 2040
0000ee 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
0000ef 3040
0000f0 3c40
0000f1 2844
0000f2 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
0000f3 0c44
0000f4 5050
0000f5 3c50
0000f6 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
0000f7 4c54
0000f8 0044
0000f9 3608
0000fa 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
0000fb 0000
0000fc 007f
0000fd 0000
0000fe 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
0000ff 0008
000100 0102
000101 0402
000102 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000103 4141
000104 7f41      	.DB  0x41,0x41,0x41,0x7F
                 _tbl10_G100:
000105 2710
000106 03e8
000107 0064
000108 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000109 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00010a 1000
00010b 0100
00010c 0010
00010d 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 __glcd_mask:
00010e 0100
00010f 0703
000110 1f0f
000111 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
C:\Users\108\Desktop\robot_starter-2\robot\Debug\List\robot.asm(1189): warning: .cseg .db misalignment - padding zero byte
000112 00ff      	.DB  0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000113 b500      	.DB  0x0,0xB5
                 
                 _0x0:
000114 6f52
000115 6f62
000116 6974
000117 0063      	.DB  0x52,0x6F,0x62,0x6F,0x74,0x69,0x63,0x0
000118 4f46
000119 0052
00011a 7473
00011b 7261      	.DB  0x46,0x4F,0x52,0x0,0x73,0x74,0x61,0x72
00011c 6574
00011d 7372
00011e 4400
00011f 5949      	.DB  0x74,0x65,0x72,0x73,0x0,0x44,0x49,0x59
000120 482d
000121 5355
000122 6800
000123 6c65      	.DB  0x2D,0x48,0x55,0x53,0x0,0x68,0x65,0x6C
000124 6f6c
C:\Users\108\Desktop\robot_starter-2\robot\Debug\List\robot.asm(1200): warning: .cseg .db misalignment - padding zero byte
000125 0000      	.DB  0x6C,0x6F,0x0
                 _0x2080060:
C:\Users\108\Desktop\robot_starter-2\robot\Debug\List\robot.asm(1202): warning: .cseg .db misalignment - padding zero byte
000126 0001      	.DB  0x1
                 _0x2080000:
000127 4e2d
000128 4e41
000129 4900
00012a 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\108\Desktop\robot_starter-2\robot\Debug\List\robot.asm(1205): warning: .cseg .db misalignment - padding zero byte
00012b 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00012c 0002      	.DW  0x02
00012d 0004      	.DW  0x04
00012e 0226      	.DW  __REG_VARS*2
                 
00012f 0008      	.DW  0x08
000130 0160      	.DW  _0xA
000131 0228      	.DW  _0x0*2
                 
000132 0004      	.DW  0x04
000133 0168      	.DW  _0xA+8
000134 0230      	.DW  _0x0*2+8
                 
000135 0009      	.DW  0x09
000136 016c      	.DW  _0xA+12
000137 0234      	.DW  _0x0*2+12
                 
000138 0008      	.DW  0x08
000139 0175      	.DW  _0xA+21
00013a 023d      	.DW  _0x0*2+21
                 
00013b 0006      	.DW  0x06
00013c 017d      	.DW  _0x55
00013d 0245      	.DW  _0x0*2+29
                 
00013e 0001      	.DW  0x01
00013f 0438      	.DW  __seed_G104
000140 024c      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000141 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000142 94f8      	CLI
000143 27ee      	CLR  R30
000144 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000145 e0f1      	LDI  R31,1
000146 bffb      	OUT  GICR,R31
000147 bfeb      	OUT  GICR,R30
000148 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000149 e08d      	LDI  R24,(14-2)+1
00014a e0a2      	LDI  R26,2
00014b 27bb      	CLR  R27
                 __CLEAR_REG:
00014c 93ed      	ST   X+,R30
00014d 958a      	DEC  R24
00014e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00014f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000150 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000151 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000152 93ed      	ST   X+,R30
000153 9701      	SBIW R24,1
000154 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000155 e5e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000156 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000157 9185      	LPM  R24,Z+
000158 9195      	LPM  R25,Z+
000159 9700      	SBIW R24,0
00015a f061      	BREQ __GLOBAL_INI_END
00015b 91a5      	LPM  R26,Z+
00015c 91b5      	LPM  R27,Z+
00015d 9005      	LPM  R0,Z+
00015e 9015      	LPM  R1,Z+
00015f 01bf      	MOVW R22,R30
000160 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000161 9005      	LPM  R0,Z+
000162 920d      	ST   X+,R0
000163 9701      	SBIW R24,1
000164 f7e1      	BRNE __GLOBAL_INI_LOOP
000165 01fb      	MOVW R30,R22
000166 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000167 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000168 bfed      	OUT  SPL,R30
000169 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00016a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00016b e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00016c e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00016d c167      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;unsigned char Code_tay_cam1 = 0xB5;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include "INIT.h"
                 
                 	.CSEG
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
00016e 93ea      	ST   -Y,R30
00016f b7ef      	IN   R30,SREG
000170 93ea      	ST   -Y,R30
000171 e9ec      	LDI  R30,LOW(156)
000172 bfe2      	OUT  0x32,R30
000173 9443      	INC  R4
000174 ece8      	LDI  R30,LOW(200)
000175 15e4      	CP   R30,R4
000176 f409      	BRNE _0x3
000177 2444      	CLR  R4
                 _0x3:
000178 1447      	CP   R4,R7
000179 f410      	BRSH _0x4
00017a 9a90      	SBI  0x12,0
00017b c001      	RJMP _0x7
                 _0x4:
00017c 9890      	CBI  0x12,0
                 _0x7:
00017d 91e9      	LD   R30,Y+
00017e bfef      	OUT  SREG,R30
00017f 91e9      	LD   R30,Y+
000180 9518      	RETI
                 ; .FEND
                 _Init_System:
                 ; .FSTART _Init_System
000181 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
000182 ece7      	LDI  R30,LOW(199)
000183 bbe7      	OUT  0x17,R30
000184 e0e0      	LDI  R30,LOW(0)
000185 bbe8      	OUT  0x18,R30
000186 e2e0      	LDI  R30,LOW(32)
000187 bbe4      	OUT  0x14,R30
000188 e0e0      	LDI  R30,LOW(0)
000189 bbe5      	OUT  0x15,R30
00018a e7e9      	LDI  R30,LOW(121)
00018b bbe1      	OUT  0x11,R30
00018c efee      	LDI  R30,LOW(254)
00018d bbe2      	OUT  0x12,R30
00018e e0e2      	LDI  R30,LOW(2)
00018f bfe3      	OUT  0x33,R30
000190 e9ec      	LDI  R30,LOW(156)
000191 bfe2      	OUT  0x32,R30
000192 eae1      	LDI  R30,LOW(161)
000193 bdef      	OUT  0x2F,R30
000194 e0eb      	LDI  R30,LOW(11)
000195 bdee      	OUT  0x2E,R30
000196 e0e0      	LDI  R30,LOW(0)
000197 bded      	OUT  0x2D,R30
000198 bdec      	OUT  0x2C,R30
000199 bde7      	OUT  0x27,R30
00019a bde6      	OUT  0x26,R30
00019b bdeb      	OUT  0x2B,R30
00019c bdea      	OUT  0x2A,R30
00019d bde9      	OUT  0x29,R30
00019e bde8      	OUT  0x28,R30
00019f bde2      	OUT  0x22,R30
0001a0 bde5      	OUT  0x25,R30
0001a1 bde4      	OUT  0x24,R30
0001a2 bde3      	OUT  0x23,R30
0001a3 e0e1      	LDI  R30,LOW(1)
0001a4 bfe9      	OUT  0x39,R30
0001a5 e0e0      	LDI  R30,LOW(0)
0001a6 bfe5      	OUT  0x35,R30
0001a7 b9ea      	OUT  0xA,R30
0001a8 e8e0      	LDI  R30,LOW(128)
0001a9 b9e8      	OUT  0x8,R30
0001aa e0e0      	LDI  R30,LOW(0)
0001ab bfe0      	OUT  0x30,R30
0001ac b9e6      	OUT  0x6,R30
0001ad b9ed      	OUT  0xD,R30
0001ae bfe6      	OUT  0x36,R30
0001af e2e6      	LDI  R30,LOW(_font5x7*2)
0001b0 e0f0      	LDI  R31,HIGH(_font5x7*2)
0001b1 83e8      	ST   Y,R30
0001b2 83f9      	STD  Y+1,R31
0001b3 e0e0      	LDI  R30,LOW(0)
0001b4 83ea      	STD  Y+2,R30
0001b5 83eb      	STD  Y+2+1,R30
0001b6 83ec      	STD  Y+4,R30
0001b7 83ed      	STD  Y+4+1,R30
0001b8 81ee      	LDD  R30,Y+6
0001b9 7fec      	ANDI R30,LOW(0xFC)
0001ba 83ee      	STD  Y+6,R30
0001bb 7ee3      	ANDI R30,LOW(0xE3)
0001bc 60ec      	ORI  R30,LOW(0xC)
0001bd 83ee      	STD  Y+6,R30
0001be 81ef      	LDD  R30,Y+7
0001bf 78e0      	ANDI R30,LOW(0x80)
0001c0 63ec      	ORI  R30,LOW(0x3C)
0001c1 83ef      	STD  Y+7,R30
0001c2 01de      	MOVW R26,R28
0001c3 d19d      	RCALL _glcd_init
0001c4 9478      	sei
0001c5 e0ea      	LDI  R30,LOW(10)
0001c6 2e7e      	MOV  R7,R30
0001c7 d592      	RCALL SUBOPT_0x0
0001c8 d594      	RCALL SUBOPT_0x1
                +
0001c9 e6a0     +LDI R26 , LOW ( _0xA + ( 0 ) )
0001ca e0b1     +LDI R27 , HIGH ( _0xA + ( 0 ) )
                 	__POINTW2MN _0xA,0
0001cb d4d0      	RCALL _glcd_outtext
0001cc e1ec      	LDI  R30,LOW(28)
0001cd 93ea      	ST   -Y,R30
0001ce e0ad      	LDI  R26,LOW(13)
0001cf d4db      	RCALL _glcd_moveto
                +
0001d0 e6a8     +LDI R26 , LOW ( _0xA + ( 8 ) )
0001d1 e0b1     +LDI R27 , HIGH ( _0xA + ( 8 ) )
                 	__POINTW2MN _0xA,8
0001d2 d4c9      	RCALL _glcd_outtext
0001d3 e2e3      	LDI  R30,LOW(35)
0001d4 93ea      	ST   -Y,R30
0001d5 e1a8      	LDI  R26,LOW(24)
0001d6 d4d4      	RCALL _glcd_moveto
                +
0001d7 e6ac     +LDI R26 , LOW ( _0xA + ( 12 ) )
0001d8 e0b1     +LDI R27 , HIGH ( _0xA + ( 12 ) )
                 	__POINTW2MN _0xA,12
0001d9 d4c2      	RCALL _glcd_outtext
0001da e1e9      	LDI  R30,LOW(25)
0001db 93ea      	ST   -Y,R30
0001dc e2a8      	LDI  R26,LOW(40)
0001dd d4cd      	RCALL _glcd_moveto
                +
0001de e7a5     +LDI R26 , LOW ( _0xA + ( 21 ) )
0001df e0b1     +LDI R27 , HIGH ( _0xA + ( 21 ) )
                 	__POINTW2MN _0xA,21
0001e0 d4bb      	RCALL _glcd_outtext
0001e1 eea8      	LDI  R26,LOW(1000)
0001e2 e0b3      	LDI  R27,HIGH(1000)
0001e3 d65d      	RCALL _delay_ms
0001e4 c4b5      	RJMP _0x2120005
                 ; .FEND
                 
                 	.DSEG
                 _0xA:
000160           	.BYTE 0x1D
                 ;#include "RF.h"
                 
                 	.CSEG
                 _SPI_RW:
                 ; .FSTART _SPI_RW
0001e5 d579      	RCALL SUBOPT_0x2
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0001e6 e010      	LDI  R17,LOW(0)
                 _0xC:
0001e7 3018      	CPI  R17,8
0001e8 f488      	BRSH _0xD
0001e9 81e9      	LDD  R30,Y+1
0001ea 78e0      	ANDI R30,LOW(0x80)
0001eb f411      	BRNE _0xE
0001ec 9896      	CBI  0x12,6
0001ed c001      	RJMP _0xF
                 _0xE:
0001ee 9a96      	SBI  0x12,6
                 _0xF:
0001ef d572      	RCALL SUBOPT_0x3
0001f0 81e9      	LDD  R30,Y+1
0001f1 0fee      	LSL  R30
0001f2 83e9      	STD  Y+1,R30
0001f3 d572      	RCALL SUBOPT_0x4
0001f4 81a9      	LDD  R26,Y+1
0001f5 2bea      	OR   R30,R26
0001f6 83e9      	STD  Y+1,R30
0001f7 9893      	CBI  0x12,3
0001f8 5f1f      	SUBI R17,-1
0001f9 cfed      	RJMP _0xC
                 _0xD:
0001fa 81e9      	LDD  R30,Y+1
0001fb 8118      	LDD  R17,Y+0
0001fc c4fd      	RJMP _0x2120003
                 ; .FEND
                 _SPI_Read:
                 ; .FSTART _SPI_Read
0001fd d695      	RCALL __SAVELOCR2
                 ;	Buff -> R17
                 ;	bit_ctr -> R16
0001fe e010      	LDI  R17,0
0001ff e000      	LDI  R16,LOW(0)
                 _0x15:
000200 3008      	CPI  R16,8
000201 f438      	BRSH _0x16
000202 d55f      	RCALL SUBOPT_0x3
000203 0f11      	LSL  R17
000204 d561      	RCALL SUBOPT_0x4
000205 2b1e      	OR   R17,R30
000206 9893      	CBI  0x12,3
000207 5f0f      	SUBI R16,-1
000208 cff7      	RJMP _0x15
                 _0x16:
000209 2fe1      	MOV  R30,R17
00020a 9109      	LD   R16,Y+
00020b 9119      	LD   R17,Y+
00020c 9508      	RET
                 ; .FEND
                 _RF_Init:
                 ; .FSTART _RF_Init
00020d 9a94      	SBI  0x12,4
                +
00020e e788     +LDI R24 , LOW ( 1400 )
00020f e095     +LDI R25 , HIGH ( 1400 )
                +__DELAY_USW_LOOP :
000210 9701     +SBIW R24 , 1
000211 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1400
000212 9894      	CBI  0x12,4
000213 9a95      	SBI  0x12,5
000214 9508      	RET
                 ; .FEND
                 _RF_Write:
                 ; .FSTART _RF_Write
000215 d556      	RCALL SUBOPT_0x5
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000216 d55d      	RCALL SUBOPT_0x6
000217 c4e2      	RJMP _0x2120003
                 ; .FEND
                 _RF_Write2:
                 ; .FSTART _RF_Write2
000218 d553      	RCALL SUBOPT_0x5
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000219 d55f      	RCALL SUBOPT_0x7
00021a d55e      	RCALL SUBOPT_0x7
00021b d55d      	RCALL SUBOPT_0x7
00021c d55c      	RCALL SUBOPT_0x7
00021d d556      	RCALL SUBOPT_0x6
00021e c4db      	RJMP _0x2120003
                 ; .FEND
                 _RF_Write3:
                 ; .FSTART _RF_Write3
00021f 93aa      	ST   -Y,R26
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000220 9895      	CBI  0x12,5
000221 81e9      	LDD  R30,Y+1
000222 62e0      	ORI  R30,0x20
000223 2fae      	MOV  R26,R30
000224 d556      	RCALL SUBOPT_0x8
000225 d555      	RCALL SUBOPT_0x8
000226 d554      	RCALL SUBOPT_0x8
000227 d553      	RCALL SUBOPT_0x8
000228 dfbc      	RCALL _SPI_RW
000229 d54f      	RCALL SUBOPT_0x7
00022a d549      	RCALL SUBOPT_0x6
00022b c4ce      	RJMP _0x2120003
                 ; .FEND
                 _RF_Command:
                 ; .FSTART _RF_Command
00022c 93aa      	ST   -Y,R26
                 ;	command -> Y+0
00022d 9895      	CBI  0x12,5
00022e d54a      	RCALL SUBOPT_0x7
00022f d544      	RCALL SUBOPT_0x6
000230 c19f      	RJMP _0x2120009
                 ; .FEND
                 _RF_Write_Address:
                 ; .FSTART _RF_Write_Address
000231 93aa      	ST   -Y,R26
                 ;	Address1 -> Y+3
                 ;	Address2 -> Y+2
                 ;	Address3 -> Y+1
                 ;	Address4 -> Y+0
000232 9895      	CBI  0x12,5
000233 e0e3      	LDI  R30,LOW(3)
000234 93ea      	ST   -Y,R30
000235 e0a3      	LDI  R26,LOW(3)
000236 dfde      	RCALL _RF_Write
000237 d53c      	RCALL SUBOPT_0x6
000238 9895      	CBI  0x12,5
000239 e0ea      	LDI  R30,LOW(10)
00023a 93ea      	ST   -Y,R30
00023b 81ac      	LDD  R26,Y+4
00023c dfdb      	RCALL _RF_Write2
00023d d540      	RCALL SUBOPT_0x9
00023e 81ac      	LDD  R26,Y+4
00023f dfd8      	RCALL _RF_Write2
000240 e0eb      	LDI  R30,LOW(11)
000241 93ea      	ST   -Y,R30
000242 81ab      	LDD  R26,Y+3
000243 dfdb      	RCALL _RF_Write3
000244 d539      	RCALL SUBOPT_0x9
000245 81ab      	LDD  R26,Y+3
000246 dfd8      	RCALL _RF_Write3
000247 e0ec      	LDI  R30,LOW(12)
000248 93ea      	ST   -Y,R30
000249 81aa      	LDD  R26,Y+2
00024a dfd4      	RCALL _RF_Write3
00024b d532      	RCALL SUBOPT_0x9
00024c 81aa      	LDD  R26,Y+2
00024d dfd1      	RCALL _RF_Write3
00024e e0ed      	LDI  R30,LOW(13)
00024f 93ea      	ST   -Y,R30
000250 81a9      	LDD  R26,Y+1
000251 dfcd      	RCALL _RF_Write3
000252 d52b      	RCALL SUBOPT_0x9
000253 81a9      	LDD  R26,Y+1
000254 dfca      	RCALL _RF_Write3
000255 c502      	RJMP _0x2120001
                 ; .FEND
                 _RX_Mode:
                 ; .FSTART _RX_Mode
000256 d503      	RCALL SUBOPT_0x0
000257 e1af      	LDI  R26,LOW(31)
000258 dfbc      	RCALL _RF_Write
000259 9a94      	SBI  0x12,4
00025a 9508      	RET
                 ; .FEND
                 _RF_Config:
                 ; .FSTART _RF_Config
                +
00025b e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00025c 958a     +DEC R24
00025d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
00025e d4fb      	RCALL SUBOPT_0x0
00025f e1af      	LDI  R26,LOW(31)
000260 dfb4      	RCALL _RF_Write
000261 e0e7      	LDI  R30,LOW(7)
000262 93ea      	ST   -Y,R30
000263 e7aa      	LDI  R26,LOW(122)
000264 dfb0      	RCALL _RF_Write
000265 e1ed      	LDI  R30,LOW(29)
000266 93ea      	ST   -Y,R30
000267 e0a4      	LDI  R26,LOW(4)
000268 dfac      	RCALL _RF_Write
000269 e1ec      	LDI  R30,LOW(28)
00026a d516      	RCALL SUBOPT_0xA
00026b e0e5      	LDI  R30,LOW(5)
00026c 93ea      	ST   -Y,R30
00026d e0a2      	LDI  R26,LOW(2)
00026e dfa6      	RCALL _RF_Write
00026f 925a      	ST   -Y,R5
000270 926a      	ST   -Y,R6
000271 929a      	ST   -Y,R9
000272 2da8      	MOV  R26,R8
000273 dfbd      	RCALL _RF_Write_Address
000274 e0e2      	LDI  R30,LOW(2)
000275 d50b      	RCALL SUBOPT_0xA
000276 e0e1      	LDI  R30,LOW(1)
000277 d509      	RCALL SUBOPT_0xA
000278 e0e4      	LDI  R30,LOW(4)
000279 93ea      	ST   -Y,R30
00027a e0a0      	LDI  R26,LOW(0)
00027b df99      	RCALL _RF_Write
00027c 9508      	RET
                 ; .FEND
                 _RF_RX_Read:
                 ; .FSTART _RF_RX_Read
00027d 9894      	CBI  0x12,4
00027e d4f5      	RCALL SUBOPT_0x6
00027f 9895      	CBI  0x12,5
000280 e6a1      	LDI  R26,LOW(97)
000281 df63      	RCALL _SPI_RW
                +
000282 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000283 958a     +DEC R24
000284 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000285 df77      	RCALL _SPI_Read
000286 e0f0      	LDI  R31,0
000287 93e0 0236 	STS  _receive,R30
000289 93f0 0237 	STS  _receive+1,R31
00028b df71      	RCALL _SPI_Read
                +
00028c e3a8     +LDI R26 , LOW ( _receive + ( 2 ) )
00028d e0b2     +LDI R27 , HIGH ( _receive + ( 2 ) )
                 	__POINTW2MN _receive,2
00028e d4f5      	RCALL SUBOPT_0xB
                +
00028f e3aa     +LDI R26 , LOW ( _receive + ( 4 ) )
000290 e0b2     +LDI R27 , HIGH ( _receive + ( 4 ) )
                 	__POINTW2MN _receive,4
000291 d4f2      	RCALL SUBOPT_0xB
                +
000292 e3ac     +LDI R26 , LOW ( _receive + ( 6 ) )
000293 e0b2     +LDI R27 , HIGH ( _receive + ( 6 ) )
                 	__POINTW2MN _receive,6
000294 e0f0      	LDI  R31,0
000295 93ed      	ST   X+,R30
000296 93fc      	ST   X,R31
000297 9a95      	SBI  0x12,5
000298 9a94      	SBI  0x12,4
000299 e0e7      	LDI  R30,LOW(7)
00029a 93ea      	ST   -Y,R30
00029b e7ae      	LDI  R26,LOW(126)
00029c df78      	RCALL _RF_Write
00029d eea2      	LDI  R26,LOW(226)
00029e df8d      	RCALL _RF_Command
00029f 9508      	RET
                 ; .FEND
                 ;#include "DC.h"
                 _control_motor:
                 ; .FSTART _control_motor
0002a0 93aa      	ST   -Y,R26
                 ;	motor -> Y+2
                 ;	dir_motor -> Y+1
                 ;	speed -> Y+0
0002a1 81ea      	LDD  R30,Y+2
0002a2 e0f0      	LDI  R31,0
0002a3 30e1      	CPI  R30,LOW(0x1)
0002a4 e0a0      	LDI  R26,HIGH(0x1)
0002a5 07fa      	CPC  R31,R26
0002a6 f4a9      	BRNE _0x46
0002a7 d4e0      	RCALL SUBOPT_0xC
0002a8 f449      	BRNE _0x47
0002a9 d4de      	RCALL SUBOPT_0xC
0002aa f411      	BRNE _0x48
0002ab 98c0      	CBI  0x18,0
0002ac c001      	RJMP _0x49
                 _0x48:
0002ad 9ac0      	SBI  0x18,0
                 _0x49:
0002ae d4dc      	RCALL SUBOPT_0xD
0002af bdfb      	OUT  0x2A+1,R31
0002b0 bdea      	OUT  0x2A,R30
0002b1 c022      	RJMP _0x45
                 _0x47:
0002b2 d4d5      	RCALL SUBOPT_0xC
0002b3 f411      	BRNE _0x4B
0002b4 98c0      	CBI  0x18,0
0002b5 c001      	RJMP _0x4C
                 _0x4B:
0002b6 9ac0      	SBI  0x18,0
                 _0x4C:
0002b7 d4d3      	RCALL SUBOPT_0xD
0002b8 d4d5      	RCALL SUBOPT_0xE
0002b9 bdfb      	OUT  0x2A+1,R31
0002ba bdea      	OUT  0x2A,R30
0002bb c018      	RJMP _0x45
                 _0x46:
0002bc 30e2      	CPI  R30,LOW(0x2)
0002bd e0a0      	LDI  R26,HIGH(0x2)
0002be 07fa      	CPC  R31,R26
0002bf f4a1      	BRNE _0x45
0002c0 d4c7      	RCALL SUBOPT_0xC
0002c1 f449      	BRNE _0x4F
0002c2 d4c5      	RCALL SUBOPT_0xC
0002c3 f411      	BRNE _0x50
0002c4 98c6      	CBI  0x18,6
0002c5 c001      	RJMP _0x51
                 _0x50:
0002c6 9ac6      	SBI  0x18,6
                 _0x51:
0002c7 d4c3      	RCALL SUBOPT_0xD
0002c8 bdf9      	OUT  0x28+1,R31
0002c9 bde8      	OUT  0x28,R30
0002ca c009      	RJMP _0x45
                 _0x4F:
0002cb d4bc      	RCALL SUBOPT_0xC
0002cc f411      	BRNE _0x53
0002cd 98c6      	CBI  0x18,6
0002ce c001      	RJMP _0x54
                 _0x53:
0002cf 9ac6      	SBI  0x18,6
                 _0x54:
0002d0 d4ba      	RCALL SUBOPT_0xD
0002d1 d4bc      	RCALL SUBOPT_0xE
0002d2 bdf9      	OUT  0x28+1,R31
0002d3 bde8      	OUT  0x28,R30
                 _0x45:
0002d4 c466      	RJMP _0x2120002
                 ; .FEND
                 ;#include <stdlib.h>
                 ;
                 ;void main(void)
                 ; 0000 0009 {
                 _main:
                 ; .FSTART _main
                 ; 0000 000A Init_System();
0002d5 deab      	RCALL _Init_System
                 ; 0000 000B RF_Config();
0002d6 df84      	RCALL _RF_Config
                 ; 0000 000C RF_Init();
0002d7 df35      	RCALL _RF_Init
                 ; 0000 000D control_motor(2,1,0);
0002d8 e0e2      	LDI  R30,LOW(2)
0002d9 d4ba      	RCALL SUBOPT_0xF
                 ; 0000 000E control_motor(1,1,0);
0002da e0e1      	LDI  R30,LOW(1)
0002db d4b8      	RCALL SUBOPT_0xF
                 ; 0000 000F glcd_moveto(0,0);
0002dc d47d      	RCALL SUBOPT_0x0
0002dd d47f      	RCALL SUBOPT_0x1
                 ; 0000 0010 glcd_outtext("hello");
                +
0002de e7ad     +LDI R26 , LOW ( _0x55 + ( 0 ) )
0002df e0b1     +LDI R27 , HIGH ( _0x55 + ( 0 ) )
                 	__POINTW2MN _0x55,0
0002e0 d3bb      	RCALL _glcd_outtext
                 ; 0000 0011 delay_ms(300);
0002e1 e2ac      	LDI  R26,LOW(300)
0002e2 e0b1      	LDI  R27,HIGH(300)
0002e3 d55d      	RCALL _delay_ms
                 ; 0000 0012 glcd_clear();
0002e4 d0ed      	RCALL _glcd_clear
                 ; 0000 0013 BL_Nokia = 0;
0002e5 98ad      	CBI  0x15,5
                 ; 0000 0014 while (1)
                 _0x58:
                 ; 0000 0015       {
                 ; 0000 0016         RX_Mode();
0002e6 df6f      	RCALL _RX_Mode
                 ; 0000 0017         if(IRQ==0)
0002e7 9987      	SBIC 0x10,7
0002e8 c027      	RJMP _0x5B
                 ; 0000 0018             {
                 ; 0000 0019                 LED=!LED;
0002e9 9bc7      	SBIS 0x18,7
0002ea c002      	RJMP _0x5C
0002eb 98c7      	CBI  0x18,7
0002ec c001      	RJMP _0x5D
                 _0x5C:
0002ed 9ac7      	SBI  0x18,7
                 _0x5D:
                 ; 0000 001A                 glcd_clear();
0002ee d0e3      	RCALL _glcd_clear
                 ; 0000 001B                 RF_RX_Read();
0002ef df8d      	RCALL _RF_RX_Read
                 ; 0000 001C                 glcd_moveto(0,0);
0002f0 d469      	RCALL SUBOPT_0x0
0002f1 d46b      	RCALL SUBOPT_0x1
                 ; 0000 001D                 itoa(receive.analog_l, glcd_buff);
0002f2 91e0 0236 	LDS  R30,_receive
0002f4 91f0 0237 	LDS  R31,_receive+1
0002f6 d4a2      	RCALL SUBOPT_0x10
                 ; 0000 001E                 glcd_outtext(glcd_buff);
                 ; 0000 001F                 glcd_moveto(20,0);
0002f7 e1e4      	LDI  R30,LOW(20)
0002f8 93ea      	ST   -Y,R30
0002f9 d463      	RCALL SUBOPT_0x1
                 ; 0000 0020                 itoa(receive.analog_r, glcd_buff);
                +
0002fa 91e0 0238+LDS R30 , _receive + ( 2 )
0002fc 91f0 0239+LDS R31 , _receive + ( 2 ) + 1
                 	__GETW1MN _receive,2
0002fe d49a      	RCALL SUBOPT_0x10
                 ; 0000 0021                 glcd_outtext(glcd_buff);
                 ; 0000 0022                 glcd_moveto(0,20);
0002ff d45a      	RCALL SUBOPT_0x0
000300 e1a4      	LDI  R26,LOW(20)
000301 d3a9      	RCALL _glcd_moveto
                 ; 0000 0023                 itoa(receive.digital_l, glcd_buff);
                +
000302 91e0 023a+LDS R30 , _receive + ( 4 )
000304 91f0 023b+LDS R31 , _receive + ( 4 ) + 1
                 	__GETW1MN _receive,4
000306 d492      	RCALL SUBOPT_0x10
                 ; 0000 0024                 glcd_outtext(glcd_buff);
                 ; 0000 0025                 glcd_moveto(20,20);
000307 e1e4      	LDI  R30,LOW(20)
000308 93ea      	ST   -Y,R30
000309 e1a4      	LDI  R26,LOW(20)
00030a d3a0      	RCALL _glcd_moveto
                 ; 0000 0026                 itoa(receive.digital_r, glcd_buff);
                +
00030b 91e0 023c+LDS R30 , _receive + ( 6 )
00030d 91f0 023d+LDS R31 , _receive + ( 6 ) + 1
                 	__GETW1MN _receive,6
00030f d489      	RCALL SUBOPT_0x10
                 ; 0000 0027                 glcd_outtext(glcd_buff);
                 ; 0000 0028             }
                 ; 0000 0029       }
                 _0x5B:
000310 cfd5      	RJMP _0x58
                 ; 0000 002A }
                 _0x5E:
000311 cfff      	RJMP _0x5E
                 ; .FEND
                 
                 	.DSEG
                 _0x55:
00017d           	.BYTE 0x6
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G101:
                 ; .FSTART _pcd8544_delay_G101
000312 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G101:
                 ; .FSTART _pcd8544_wrbus_G101
000313 d44b      	RCALL SUBOPT_0x2
000314 98a9      	CBI  0x15,1
000315 e018      	LDI  R17,LOW(8)
                 _0x2020004:
000316 dffb      	RCALL _pcd8544_delay_G101
000317 81e9      	LDD  R30,Y+1
000318 78e0      	ANDI R30,LOW(0x80)
000319 f011      	BREQ _0x2020006
00031a 9aab      	SBI  0x15,3
00031b c001      	RJMP _0x2020007
                 _0x2020006:
00031c 98ab      	CBI  0x15,3
                 _0x2020007:
00031d 81e9      	LDD  R30,Y+1
00031e 0fee      	LSL  R30
00031f 83e9      	STD  Y+1,R30
000320 dff1      	RCALL _pcd8544_delay_G101
000321 9aac      	SBI  0x15,4
000322 dfef      	RCALL _pcd8544_delay_G101
000323 98ac      	CBI  0x15,4
000324 5011      	SUBI R17,LOW(1)
000325 f781      	BRNE _0x2020004
000326 9aa9      	SBI  0x15,1
000327 8118      	LDD  R17,Y+0
000328 c3d1      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000329 93aa      	ST   -Y,R26
00032a 98aa      	CBI  0x15,2
00032b 81a8      	LD   R26,Y
00032c dfe6      	RCALL _pcd8544_wrbus_G101
00032d c0a2      	RJMP _0x2120009
                 ; .FEND
                 _pcd8544_wrdata_G101:
                 ; .FSTART _pcd8544_wrdata_G101
00032e 93aa      	ST   -Y,R26
00032f 9aaa      	SBI  0x15,2
000330 81a8      	LD   R26,Y
000331 dfe1      	RCALL _pcd8544_wrbus_G101
000332 c09d      	RJMP _0x2120009
                 ; .FEND
                 _pcd8544_setaddr_G101:
                 ; .FSTART _pcd8544_setaddr_G101
000333 d42b      	RCALL SUBOPT_0x2
000334 81e9      	LDD  R30,Y+1
000335 d46b      	RCALL SUBOPT_0x11
000336 2f1e      	MOV  R17,R30
000337 e5e4      	LDI  R30,LOW(84)
000338 9fe1      	MUL  R30,R17
000339 01f0      	MOVW R30,R0
00033a 01df      	MOVW R26,R30
00033b 81ea      	LDD  R30,Y+2
00033c d468      	RCALL SUBOPT_0x12
00033d 93e0 023e 	STS  _gfx_addr_G101,R30
00033f 93f0 023f 	STS  _gfx_addr_G101+1,R31
000341 2fe1      	MOV  R30,R17
000342 8118      	LDD  R17,Y+0
000343 c3f7      	RJMP _0x2120002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000344 93aa      	ST   -Y,R26
000345 81e9      	LDD  R30,Y+1
000346 68e0      	ORI  R30,0x80
000347 d461      	RCALL SUBOPT_0x13
000348 81e9      	LDD  R30,Y+1
000349 93ea      	ST   -Y,R30
00034a 81a9      	LDD  R26,Y+1
00034b dfe7      	RCALL _pcd8544_setaddr_G101
00034c 64e0      	ORI  R30,0x40
00034d d45b      	RCALL SUBOPT_0x13
00034e c3ab      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
00034f 93aa      	ST   -Y,R26
000350 81e9      	LDD  R30,Y+1
000351 93ea      	ST   -Y,R30
000352 81a9      	LDD  R26,Y+1
000353 dff0      	RCALL _pcd8544_gotoxy
000354 91e0 023e 	LDS  R30,_gfx_addr_G101
000356 91f0 023f 	LDS  R31,_gfx_addr_G101+1
000358 d452      	RCALL SUBOPT_0x14
000359 81e0      	LD   R30,Z
00035a c39f      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
00035b 93aa      	ST   -Y,R26
00035c d451      	RCALL SUBOPT_0x15
00035d 81a8      	LD   R26,Y
00035e 83a0      	STD  Z+0,R26
00035f dfce      	RCALL _pcd8544_wrdata_G101
000360 c06f      	RJMP _0x2120009
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000361 d455      	RCALL SUBOPT_0x16
000362 d52e      	RCALL __SAVELOCR4
000363 9aa1      	SBI  0x14,1
000364 9aa9      	SBI  0x15,1
000365 9aa4      	SBI  0x14,4
000366 98ac      	CBI  0x15,4
000367 9aa3      	SBI  0x14,3
000368 9aa2      	SBI  0x14,2
000369 9aa0      	SBI  0x14,0
00036a 98a8      	CBI  0x15,0
00036b e0aa      	LDI  R26,LOW(10)
00036c e0b0      	LDI  R27,0
00036d d4d3      	RCALL _delay_ms
00036e 9aa8      	SBI  0x15,0
00036f d44a      	RCALL SUBOPT_0x17
000370 9730      	SBIW R30,0
000371 f0e1      	BREQ _0x2020008
000372 d447      	RCALL SUBOPT_0x17
000373 81e6      	LDD  R30,Z+6
000374 70e3      	ANDI R30,LOW(0x3)
000375 2f1e      	MOV  R17,R30
000376 d443      	RCALL SUBOPT_0x17
000377 81e6      	LDD  R30,Z+6
000378 95e6      	LSR  R30
000379 95e6      	LSR  R30
00037a 70e7      	ANDI R30,LOW(0x7)
00037b 2f0e      	MOV  R16,R30
00037c d43d      	RCALL SUBOPT_0x17
00037d 81e7      	LDD  R30,Z+7
00037e 77ef      	ANDI R30,0x7F
00037f 2f3e      	MOV  R19,R30
000380 81ac      	LDD  R26,Y+4
000381 81bd      	LDD  R27,Y+4+1
000382 d4e0      	RCALL __GETW1P
000383 d439      	RCALL SUBOPT_0x18
000384 81ac      	LDD  R26,Y+4
000385 81bd      	LDD  R27,Y+4+1
000386 9612      	ADIW R26,2
000387 d4db      	RCALL __GETW1P
000388 d439      	RCALL SUBOPT_0x19
000389 81ac      	LDD  R26,Y+4
00038a 81bd      	LDD  R27,Y+4+1
00038b 9614      	ADIW R26,4
00038c d4d6      	RCALL __GETW1P
00038d c008      	RJMP _0x20200A0
                 _0x2020008:
00038e e010      	LDI  R17,LOW(0)
00038f e003      	LDI  R16,LOW(3)
000390 e332      	LDI  R19,LOW(50)
000391 d435      	RCALL SUBOPT_0x1A
000392 d42a      	RCALL SUBOPT_0x18
000393 d433      	RCALL SUBOPT_0x1A
000394 d42d      	RCALL SUBOPT_0x19
000395 d431      	RCALL SUBOPT_0x1A
                 _0x20200A0:
                +
000396 93e0 019e+STS _glcd_state + ( 27 ) , R30
000398 93f0 019f+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
00039a e2a1      	LDI  R26,LOW(33)
00039b df8d      	RCALL _pcd8544_wrcmd
00039c 2fe1      	MOV  R30,R17
00039d 60e4      	ORI  R30,4
00039e d40a      	RCALL SUBOPT_0x13
00039f 2fe0      	MOV  R30,R16
0003a0 61e0      	ORI  R30,0x10
0003a1 d407      	RCALL SUBOPT_0x13
0003a2 2fe3      	MOV  R30,R19
0003a3 68e0      	ORI  R30,0x80
0003a4 d404      	RCALL SUBOPT_0x13
0003a5 e2a0      	LDI  R26,LOW(32)
0003a6 df82      	RCALL _pcd8544_wrcmd
0003a7 e0a1      	LDI  R26,LOW(1)
0003a8 d01f      	RCALL _glcd_display
0003a9 e0e1      	LDI  R30,LOW(1)
0003aa 93e0 0183 	STS  _glcd_state,R30
0003ac e0e0      	LDI  R30,LOW(0)
                +
0003ad 93e0 0184+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0003af e0e1      	LDI  R30,LOW(1)
                +
0003b0 93e0 0189+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0003b2 93e0 018a+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0003b4 93e0 018b+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0003b6 efef      	LDI  R30,LOW(255)
                +
0003b7 93e0 018c+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0003b9 e0e1      	LDI  R30,LOW(1)
                +
0003ba 93e0 0193+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0003bc e9e4     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0003bd e0f1     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0003be d40b      	RCALL SUBOPT_0x1B
0003bf efef      	LDI  R30,LOW(255)
0003c0 93ea      	ST   -Y,R30
0003c1 e0a8      	LDI  R26,LOW(8)
0003c2 e0b0      	LDI  R27,0
0003c3 d320      	RCALL _memset
0003c4 d00d      	RCALL _glcd_clear
0003c5 e0e1      	LDI  R30,LOW(1)
0003c6 d4d1      	RCALL __LOADLOCR4
0003c7 c057      	RJMP _0x2120008
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0003c8 93aa      	ST   -Y,R26
0003c9 81e8      	LD   R30,Y
0003ca 30e0      	CPI  R30,0
0003cb f011      	BREQ _0x202000A
0003cc e0ec      	LDI  R30,LOW(12)
0003cd c001      	RJMP _0x202000B
                 _0x202000A:
0003ce e0e8      	LDI  R30,LOW(8)
                 _0x202000B:
0003cf d3d9      	RCALL SUBOPT_0x13
                 _0x2120009:
0003d0 9621      	ADIW R28,1
0003d1 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
0003d2 d4be      	RCALL __SAVELOCR4
0003d3 e030      	LDI  R19,0
                +
0003d4 91e0 0184+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0003d6 30e0      	CPI  R30,0
0003d7 f009      	BREQ _0x202000D
0003d8 ef3f      	LDI  R19,LOW(255)
                 _0x202000D:
0003d9 d380      	RCALL SUBOPT_0x0
0003da e0a0      	LDI  R26,LOW(0)
0003db df68      	RCALL _pcd8544_gotoxy
                +
0003dc ef08     +LDI R16 , LOW ( 504 )
0003dd e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x202000E:
0003de 01f8      	MOVW R30,R16
                +
0003df 5001     +SUBI R16 , LOW ( 1 )
0003e0 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0003e1 9730      	SBIW R30,0
0003e2 f019      	BREQ _0x2020010
0003e3 2fa3      	MOV  R26,R19
0003e4 df76      	RCALL _pcd8544_wrbyte
0003e5 cff8      	RJMP _0x202000E
                 _0x2020010:
0003e6 d373      	RCALL SUBOPT_0x0
0003e7 d375      	RCALL SUBOPT_0x1
0003e8 d4af      	RCALL __LOADLOCR4
0003e9 c36e      	RJMP _0x2120001
                 ; .FEND
                 _pcd8544_wrmasked_G101:
                 ; .FSTART _pcd8544_wrmasked_G101
0003ea d374      	RCALL SUBOPT_0x2
0003eb 81ed      	LDD  R30,Y+5
0003ec 93ea      	ST   -Y,R30
0003ed 81ad      	LDD  R26,Y+5
0003ee df60      	RCALL _pcd8544_rdbyte
0003ef 2f1e      	MOV  R17,R30
0003f0 81e9      	LDD  R30,Y+1
0003f1 30e7      	CPI  R30,LOW(0x7)
0003f2 f011      	BREQ _0x2020020
0003f3 30e8      	CPI  R30,LOW(0x8)
0003f4 f431      	BRNE _0x2020021
                 _0x2020020:
0003f5 81eb      	LDD  R30,Y+3
0003f6 93ea      	ST   -Y,R30
0003f7 81aa      	LDD  R26,Y+2
0003f8 d303      	RCALL _glcd_mappixcolor1bit
0003f9 83eb      	STD  Y+3,R30
0003fa c008      	RJMP _0x2020022
                 _0x2020021:
0003fb 30e3      	CPI  R30,LOW(0x3)
0003fc f421      	BRNE _0x2020024
0003fd 81eb      	LDD  R30,Y+3
0003fe 95e0      	COM  R30
0003ff 83eb      	STD  Y+3,R30
000400 c002      	RJMP _0x2020025
                 _0x2020024:
000401 30e0      	CPI  R30,0
000402 f421      	BRNE _0x2020026
                 _0x2020025:
                 _0x2020022:
000403 81ea      	LDD  R30,Y+2
000404 95e0      	COM  R30
000405 231e      	AND  R17,R30
000406 c002      	RJMP _0x2020027
                 _0x2020026:
000407 30e2      	CPI  R30,LOW(0x2)
000408 f429      	BRNE _0x2020028
                 _0x2020027:
000409 81ea      	LDD  R30,Y+2
00040a 81ab      	LDD  R26,Y+3
00040b 23ea      	AND  R30,R26
00040c 2b1e      	OR   R17,R30
00040d c00e      	RJMP _0x202001E
                 _0x2020028:
00040e 30e1      	CPI  R30,LOW(0x1)
00040f f429      	BRNE _0x2020029
000410 81ea      	LDD  R30,Y+2
000411 81ab      	LDD  R26,Y+3
000412 23ea      	AND  R30,R26
000413 271e      	EOR  R17,R30
000414 c007      	RJMP _0x202001E
                 _0x2020029:
000415 30e4      	CPI  R30,LOW(0x4)
000416 f429      	BRNE _0x202001E
000417 81ea      	LDD  R30,Y+2
000418 95e0      	COM  R30
000419 81ab      	LDD  R26,Y+3
00041a 2bea      	OR   R30,R26
00041b 231e      	AND  R17,R30
                 _0x202001E:
00041c 2fa1      	MOV  R26,R17
00041d df3d      	RCALL _pcd8544_wrbyte
00041e 8118      	LDD  R17,Y+0
                 _0x2120008:
00041f 9626      	ADIW R28,6
000420 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000421 93aa      	ST   -Y,R26
000422 9723      	SBIW R28,3
000423 d46b      	RCALL __SAVELOCR6
000424 89a8      	LDD  R26,Y+16
000425 35a4      	CPI  R26,LOW(0x54)
000426 f448      	BRSH _0x202002C
000427 85af      	LDD  R26,Y+15
000428 33a0      	CPI  R26,LOW(0x30)
000429 f430      	BRSH _0x202002C
00042a 85ae      	LDD  R26,Y+14
00042b 30a0      	CPI  R26,LOW(0x0)
00042c f019      	BREQ _0x202002C
00042d 85ad      	LDD  R26,Y+13
00042e 30a0      	CPI  R26,LOW(0x0)
00042f f409      	BRNE _0x202002B
                 _0x202002C:
000430 c188      	RJMP _0x2120007
                 _0x202002B:
000431 85ee      	LDD  R30,Y+14
000432 87e8      	STD  Y+8,R30
000433 89a8      	LDD  R26,Y+16
000434 27bb      	CLR  R27
000435 85ee      	LDD  R30,Y+14
000436 d396      	RCALL SUBOPT_0x1C
000437 35a5      	CPI  R26,LOW(0x55)
000438 e0e0      	LDI  R30,HIGH(0x55)
000439 07be      	CPC  R27,R30
00043a f020      	BRLO _0x202002E
00043b 89a8      	LDD  R26,Y+16
00043c e5e4      	LDI  R30,LOW(84)
00043d 1bea      	SUB  R30,R26
00043e 87ee      	STD  Y+14,R30
                 _0x202002E:
00043f 852d      	LDD  R18,Y+13
000440 85af      	LDD  R26,Y+15
000441 27bb      	CLR  R27
000442 85ed      	LDD  R30,Y+13
000443 d389      	RCALL SUBOPT_0x1C
000444 97d1      	SBIW R26,49
000445 f020      	BRLO _0x202002F
000446 85af      	LDD  R26,Y+15
000447 e3e0      	LDI  R30,LOW(48)
000448 1bea      	SUB  R30,R26
000449 87ed      	STD  Y+13,R30
                 _0x202002F:
00044a 85a9      	LDD  R26,Y+9
00044b 30a6      	CPI  R26,LOW(0x6)
00044c f009      	BREQ PC+2
00044d c054      	RJMP _0x2020030
00044e 85ec      	LDD  R30,Y+12
00044f 30e1      	CPI  R30,LOW(0x1)
000450 f409      	BRNE _0x2020034
000451 c167      	RJMP _0x2120007
                 _0x2020034:
000452 30e3      	CPI  R30,LOW(0x3)
000453 f439      	BRNE _0x2020037
                +
000454 91e0 019e+LDS R30 , _glcd_state + ( 27 )
000456 91f0 019f+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000458 9730      	SBIW R30,0
000459 f409      	BRNE _0x2020036
00045a c15e      	RJMP _0x2120007
                 _0x2020036:
                 _0x2020037:
00045b 8508      	LDD  R16,Y+8
00045c 85ed      	LDD  R30,Y+13
00045d d343      	RCALL SUBOPT_0x11
00045e 2f3e      	MOV  R19,R30
00045f 2fe2      	MOV  R30,R18
000460 70e7      	ANDI R30,LOW(0x7)
000461 f419      	BRNE _0x2020039
000462 85ad      	LDD  R26,Y+13
000463 172a      	CP   R18,R26
000464 f0d9      	BREQ _0x2020038
                 _0x2020039:
000465 2fa0      	MOV  R26,R16
000466 27bb      	CLR  R27
000467 2fe3      	MOV  R30,R19
000468 d368      	RCALL SUBOPT_0x1D
000469 85aa      	LDD  R26,Y+10
00046a 85bb      	LDD  R27,Y+10+1
00046b 0fea      	ADD  R30,R26
00046c 1ffb      	ADC  R31,R27
00046d d366      	RCALL SUBOPT_0x1E
00046e 9526      	LSR  R18
00046f 9526      	LSR  R18
000470 9526      	LSR  R18
000471 2f53      	MOV  R21,R19
                 _0x202003B:
000472 935f      	PUSH R21
000473 5f5f      	SUBI R21,-1
000474 2fe2      	MOV  R30,R18
000475 91af      	POP  R26
000476 17ea      	CP   R30,R26
000477 f040      	BRLO _0x202003D
000478 2f10      	MOV  R17,R16
                 _0x202003E:
000479 2fe1      	MOV  R30,R17
00047a 5011      	SUBI R17,1
00047b 30e0      	CPI  R30,0
00047c f011      	BREQ _0x2020040
00047d d359      	RCALL SUBOPT_0x1F
00047e cffa      	RJMP _0x202003E
                 _0x2020040:
00047f cff2      	RJMP _0x202003B
                 _0x202003D:
                 _0x2020038:
000480 85ae      	LDD  R26,Y+14
000481 170a      	CP   R16,R26
000482 f0f9      	BREQ _0x2020041
000483 85ee      	LDD  R30,Y+14
000484 85aa      	LDD  R26,Y+10
000485 85bb      	LDD  R27,Y+10+1
000486 d31e      	RCALL SUBOPT_0x12
000487 d34c      	RCALL SUBOPT_0x1E
000488 85ed      	LDD  R30,Y+13
000489 70e7      	ANDI R30,LOW(0x7)
00048a f009      	BREQ _0x2020042
00048b 5f3f      	SUBI R19,-LOW(1)
                 _0x2020042:
00048c e020      	LDI  R18,LOW(0)
                 _0x2020043:
00048d 932f      	PUSH R18
00048e 5f2f      	SUBI R18,-1
00048f 2fe3      	MOV  R30,R19
000490 91af      	POP  R26
000491 17ae      	CP   R26,R30
000492 f478      	BRSH _0x2020045
000493 851e      	LDD  R17,Y+14
                 _0x2020046:
000494 931f      	PUSH R17
000495 5f1f      	SUBI R17,-1
000496 2fe0      	MOV  R30,R16
000497 91af      	POP  R26
000498 17ae      	CP   R26,R30
000499 f410      	BRSH _0x2020048
00049a d33c      	RCALL SUBOPT_0x1F
00049b cff8      	RJMP _0x2020046
                 _0x2020048:
00049c 85ee      	LDD  R30,Y+14
00049d 81ae      	LDD  R26,Y+6
00049e 81bf      	LDD  R27,Y+6+1
00049f d305      	RCALL SUBOPT_0x12
0004a0 d333      	RCALL SUBOPT_0x1E
0004a1 cfeb      	RJMP _0x2020043
                 _0x2020045:
                 _0x2020041:
                 _0x2020030:
0004a2 85ef      	LDD  R30,Y+15
0004a3 70e7      	ANDI R30,LOW(0x7)
0004a4 2f3e      	MOV  R19,R30
                 _0x2020049:
0004a5 85ed      	LDD  R30,Y+13
0004a6 30e0      	CPI  R30,0
0004a7 f409      	BRNE PC+2
0004a8 c110      	RJMP _0x202004B
0004a9 85ea      	LDD  R30,Y+10
0004aa 85fb      	LDD  R31,Y+10+1
0004ab d328      	RCALL SUBOPT_0x1E
0004ac e010      	LDI  R17,LOW(0)
0004ad 8908      	LDD  R16,Y+16
0004ae 3030      	CPI  R19,0
0004af f009      	BREQ PC+2
0004b0 c059      	RJMP _0x202004C
0004b1 85ad      	LDD  R26,Y+13
0004b2 30a8      	CPI  R26,LOW(0x8)
0004b3 f408      	BRSH PC+2
0004b4 c050      	RJMP _0x202004D
0004b5 85e9      	LDD  R30,Y+9
0004b6 30e0      	CPI  R30,0
0004b7 f011      	BREQ _0x2020052
0004b8 30e3      	CPI  R30,LOW(0x3)
0004b9 f409      	BRNE _0x2020053
                 _0x2020052:
0004ba c002      	RJMP _0x2020054
                 _0x2020053:
0004bb 30e7      	CPI  R30,LOW(0x7)
0004bc f409      	BRNE _0x2020055
                 _0x2020054:
0004bd c002      	RJMP _0x2020056
                 _0x2020055:
0004be 30e8      	CPI  R30,LOW(0x8)
0004bf f409      	BRNE _0x2020057
                 _0x2020056:
0004c0 c002      	RJMP _0x2020058
                 _0x2020057:
0004c1 30e9      	CPI  R30,LOW(0x9)
0004c2 f409      	BRNE _0x2020059
                 _0x2020058:
0004c3 c002      	RJMP _0x202005A
                 _0x2020059:
0004c4 30ea      	CPI  R30,LOW(0xA)
0004c5 f419      	BRNE _0x202005B
                 _0x202005A:
0004c6 d31b      	RCALL SUBOPT_0x20
0004c7 de7c      	RCALL _pcd8544_gotoxy
0004c8 c004      	RJMP _0x2020050
                 _0x202005B:
0004c9 30e6      	CPI  R30,LOW(0x6)
0004ca f411      	BRNE _0x2020050
0004cb d316      	RCALL SUBOPT_0x20
0004cc de66      	RCALL _pcd8544_setaddr_G101
                 _0x2020050:
                 _0x202005D:
0004cd 931f      	PUSH R17
0004ce d316      	RCALL SUBOPT_0x21
0004cf 91af      	POP  R26
0004d0 17ae      	CP   R26,R30
0004d1 f560      	BRSH _0x202005F
0004d2 85a9      	LDD  R26,Y+9
0004d3 30a6      	CPI  R26,LOW(0x6)
0004d4 f431      	BRNE _0x2020060
0004d5 d312      	RCALL SUBOPT_0x22
0004d6 d2f3      	RCALL SUBOPT_0x1B
0004d7 d2d6      	RCALL SUBOPT_0x15
0004d8 81a0      	LD   R26,Z
0004d9 d263      	RCALL _glcd_writemem
0004da c022      	RJMP _0x2020061
                 _0x2020060:
0004db 85e9      	LDD  R30,Y+9
0004dc 30e9      	CPI  R30,LOW(0x9)
0004dd f411      	BRNE _0x2020065
0004de e050      	LDI  R21,LOW(0)
0004df c00c      	RJMP _0x2020066
                 _0x2020065:
0004e0 30ea      	CPI  R30,LOW(0xA)
0004e1 f411      	BRNE _0x2020064
0004e2 ef5f      	LDI  R21,LOW(255)
0004e3 c008      	RJMP _0x2020066
                 _0x2020064:
0004e4 d303      	RCALL SUBOPT_0x22
0004e5 d30b      	RCALL SUBOPT_0x23
0004e6 2f5e      	MOV  R21,R30
0004e7 85e9      	LDD  R30,Y+9
0004e8 30e7      	CPI  R30,LOW(0x7)
0004e9 f011      	BREQ _0x202006D
0004ea 30e8      	CPI  R30,LOW(0x8)
0004eb f419      	BRNE _0x202006E
                 _0x202006D:
                 _0x2020066:
0004ec d309      	RCALL SUBOPT_0x24
0004ed 2f5e      	MOV  R21,R30
0004ee c006      	RJMP _0x202006F
                 _0x202006E:
0004ef 30e3      	CPI  R30,LOW(0x3)
0004f0 f411      	BRNE _0x2020071
0004f1 9550      	COM  R21
0004f2 c002      	RJMP _0x2020072
                 _0x2020071:
0004f3 30e0      	CPI  R30,0
0004f4 f419      	BRNE _0x2020074
                 _0x2020072:
                 _0x202006F:
0004f5 2fa5      	MOV  R26,R21
0004f6 de37      	RCALL _pcd8544_wrdata_G101
0004f7 c005      	RJMP _0x202006B
                 _0x2020074:
0004f8 d300      	RCALL SUBOPT_0x25
0004f9 efef      	LDI  R30,LOW(255)
0004fa 93ea      	ST   -Y,R30
0004fb 85ad      	LDD  R26,Y+13
0004fc deed      	RCALL _pcd8544_wrmasked_G101
                 _0x202006B:
                 _0x2020061:
0004fd cfcf      	RJMP _0x202005D
                 _0x202005F:
0004fe 85ef      	LDD  R30,Y+15
0004ff 5fe8      	SUBI R30,-LOW(8)
000500 87ef      	STD  Y+15,R30
000501 85ed      	LDD  R30,Y+13
000502 50e8      	SUBI R30,LOW(8)
000503 87ed      	STD  Y+13,R30
000504 c0ad      	RJMP _0x2020075
                 _0x202004D:
000505 855d      	LDD  R21,Y+13
000506 e020      	LDI  R18,LOW(0)
000507 e0e0      	LDI  R30,LOW(0)
000508 87ed      	STD  Y+13,R30
000509 c067      	RJMP _0x2020076
                 _0x202004C:
00050a 2fe3      	MOV  R30,R19
00050b 85ad      	LDD  R26,Y+13
00050c 0fae      	ADD  R26,R30
00050d 30a9      	CPI  R26,LOW(0x9)
00050e f420      	BRSH _0x2020077
00050f 852d      	LDD  R18,Y+13
000510 e0e0      	LDI  R30,LOW(0)
000511 87ed      	STD  Y+13,R30
000512 c003      	RJMP _0x2020078
                 _0x2020077:
000513 e0e8      	LDI  R30,LOW(8)
000514 1be3      	SUB  R30,R19
000515 2f2e      	MOV  R18,R30
                 _0x2020078:
000516 933a      	ST   -Y,R19
000517 2fa2      	MOV  R26,R18
000518 d1da      	RCALL _glcd_getmask
000519 2f4e      	MOV  R20,R30
00051a 85e9      	LDD  R30,Y+9
00051b 30e6      	CPI  R30,LOW(0x6)
00051c f4b9      	BRNE _0x202007C
00051d d2c4      	RCALL SUBOPT_0x20
00051e de14      	RCALL _pcd8544_setaddr_G101
                 _0x202007D:
00051f 931f      	PUSH R17
000520 d2c4      	RCALL SUBOPT_0x21
000521 91af      	POP  R26
000522 17ae      	CP   R26,R30
000523 f478      	BRSH _0x202007F
000524 d289      	RCALL SUBOPT_0x15
000525 81e0      	LD   R30,Z
000526 23e4      	AND  R30,R20
000527 2fae      	MOV  R26,R30
000528 2fe3      	MOV  R30,R19
000529 d329      	RCALL __LSRB12
00052a d2d4      	RCALL SUBOPT_0x26
00052b 2fe3      	MOV  R30,R19
00052c 2fa4      	MOV  R26,R20
00052d d325      	RCALL __LSRB12
00052e d2da      	RCALL SUBOPT_0x27
00052f d29a      	RCALL SUBOPT_0x1B
000530 2fa5      	MOV  R26,R21
000531 d20b      	RCALL _glcd_writemem
000532 cfec      	RJMP _0x202007D
                 _0x202007F:
000533 c022      	RJMP _0x202007B
                 _0x202007C:
000534 30e9      	CPI  R30,LOW(0x9)
000535 f411      	BRNE _0x2020080
000536 e050      	LDI  R21,LOW(0)
000537 c003      	RJMP _0x2020081
                 _0x2020080:
000538 30ea      	CPI  R30,LOW(0xA)
000539 f489      	BRNE _0x2020087
00053a ef5f      	LDI  R21,LOW(255)
                 _0x2020081:
00053b d2ba      	RCALL SUBOPT_0x24
00053c 2fae      	MOV  R26,R30
00053d 2fe3      	MOV  R30,R19
00053e d30c      	RCALL __LSLB12
00053f 2f5e      	MOV  R21,R30
                 _0x2020084:
000540 931f      	PUSH R17
000541 d2a3      	RCALL SUBOPT_0x21
000542 91af      	POP  R26
000543 17ae      	CP   R26,R30
000544 f428      	BRSH _0x2020086
000545 d2b3      	RCALL SUBOPT_0x25
000546 934a      	ST   -Y,R20
000547 e0a0      	LDI  R26,LOW(0)
000548 dea1      	RCALL _pcd8544_wrmasked_G101
000549 cff6      	RJMP _0x2020084
                 _0x2020086:
00054a c00b      	RJMP _0x202007B
                 _0x2020087:
                 _0x2020088:
00054b 931f      	PUSH R17
00054c d298      	RCALL SUBOPT_0x21
00054d 91af      	POP  R26
00054e 17ae      	CP   R26,R30
00054f f430      	BRSH _0x202008A
000550 d2bc      	RCALL SUBOPT_0x28
000551 2fae      	MOV  R26,R30
000552 2fe3      	MOV  R30,R19
000553 d2f7      	RCALL __LSLB12
000554 d2c5      	RCALL SUBOPT_0x29
000555 cff5      	RJMP _0x2020088
                 _0x202008A:
                 _0x202007B:
000556 85ed      	LDD  R30,Y+13
000557 30e0      	CPI  R30,0
000558 f409      	BRNE _0x202008B
000559 c05f      	RJMP _0x202004B
                 _0x202008B:
00055a 85ad      	LDD  R26,Y+13
00055b 30a8      	CPI  R26,LOW(0x8)
00055c f428      	BRSH _0x202008C
00055d 85ed      	LDD  R30,Y+13
00055e 1be2      	SUB  R30,R18
00055f 2f5e      	MOV  R21,R30
000560 e0e0      	LDI  R30,LOW(0)
000561 c003      	RJMP _0x20200A1
                 _0x202008C:
000562 2f53      	MOV  R21,R19
000563 85ed      	LDD  R30,Y+13
000564 50e8      	SUBI R30,LOW(8)
                 _0x20200A1:
000565 87ed      	STD  Y+13,R30
000566 e010      	LDI  R17,LOW(0)
000567 85ef      	LDD  R30,Y+15
000568 5fe8      	SUBI R30,-LOW(8)
000569 87ef      	STD  Y+15,R30
00056a e0e8      	LDI  R30,LOW(8)
00056b 1be3      	SUB  R30,R19
00056c 2f2e      	MOV  R18,R30
00056d 8908      	LDD  R16,Y+16
00056e 85ea      	LDD  R30,Y+10
00056f 85fb      	LDD  R31,Y+10+1
000570 d263      	RCALL SUBOPT_0x1E
                 _0x2020076:
000571 2fe5      	MOV  R30,R21
000572 e0f0      	LDI  R31,0
000573 5ee4      	SUBI R30,LOW(-__glcd_mask*2)
000574 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000575 9144      	LPM  R20,Z
000576 85e9      	LDD  R30,Y+9
000577 30e6      	CPI  R30,LOW(0x6)
000578 f4b9      	BRNE _0x2020091
000579 d268      	RCALL SUBOPT_0x20
00057a ddb8      	RCALL _pcd8544_setaddr_G101
                 _0x2020092:
00057b 931f      	PUSH R17
00057c d268      	RCALL SUBOPT_0x21
00057d 91af      	POP  R26
00057e 17ae      	CP   R26,R30
00057f f478      	BRSH _0x2020094
000580 d22d      	RCALL SUBOPT_0x15
000581 81e0      	LD   R30,Z
000582 23e4      	AND  R30,R20
000583 2fae      	MOV  R26,R30
000584 2fe2      	MOV  R30,R18
000585 d2c5      	RCALL __LSLB12
000586 d278      	RCALL SUBOPT_0x26
000587 2fe2      	MOV  R30,R18
000588 2fa4      	MOV  R26,R20
000589 d2c1      	RCALL __LSLB12
00058a d27e      	RCALL SUBOPT_0x27
00058b d23e      	RCALL SUBOPT_0x1B
00058c 2fa5      	MOV  R26,R21
00058d d1af      	RCALL _glcd_writemem
00058e cfec      	RJMP _0x2020092
                 _0x2020094:
00058f c022      	RJMP _0x2020090
                 _0x2020091:
000590 30e9      	CPI  R30,LOW(0x9)
000591 f411      	BRNE _0x2020095
000592 e050      	LDI  R21,LOW(0)
000593 c003      	RJMP _0x2020096
                 _0x2020095:
000594 30ea      	CPI  R30,LOW(0xA)
000595 f489      	BRNE _0x202009C
000596 ef5f      	LDI  R21,LOW(255)
                 _0x2020096:
000597 d25e      	RCALL SUBOPT_0x24
000598 2fae      	MOV  R26,R30
000599 2fe2      	MOV  R30,R18
00059a d2b8      	RCALL __LSRB12
00059b 2f5e      	MOV  R21,R30
                 _0x2020099:
00059c 931f      	PUSH R17
00059d d247      	RCALL SUBOPT_0x21
00059e 91af      	POP  R26
00059f 17ae      	CP   R26,R30
0005a0 f428      	BRSH _0x202009B
0005a1 d257      	RCALL SUBOPT_0x25
0005a2 934a      	ST   -Y,R20
0005a3 e0a0      	LDI  R26,LOW(0)
0005a4 de45      	RCALL _pcd8544_wrmasked_G101
0005a5 cff6      	RJMP _0x2020099
                 _0x202009B:
0005a6 c00b      	RJMP _0x2020090
                 _0x202009C:
                 _0x202009D:
0005a7 931f      	PUSH R17
0005a8 d23c      	RCALL SUBOPT_0x21
0005a9 91af      	POP  R26
0005aa 17ae      	CP   R26,R30
0005ab f430      	BRSH _0x202009F
0005ac d260      	RCALL SUBOPT_0x28
0005ad 2fae      	MOV  R26,R30
0005ae 2fe2      	MOV  R30,R18
0005af d2a3      	RCALL __LSRB12
0005b0 d269      	RCALL SUBOPT_0x29
0005b1 cff5      	RJMP _0x202009D
                 _0x202009F:
                 _0x2020090:
                 _0x2020075:
0005b2 85e8      	LDD  R30,Y+8
0005b3 85aa      	LDD  R26,Y+10
0005b4 85bb      	LDD  R27,Y+10+1
0005b5 d1ef      	RCALL SUBOPT_0x12
0005b6 87ea      	STD  Y+10,R30
0005b7 87fb      	STD  Y+10+1,R31
0005b8 ceec      	RJMP _0x2020049
                 _0x202004B:
                 _0x2120007:
0005b9 d2dc      	RCALL __LOADLOCR6
0005ba 9661      	ADIW R28,17
0005bb 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
0005bc d261      	RCALL SUBOPT_0x2A
0005bd f014      	BRLT _0x2040003
0005be d208      	RCALL SUBOPT_0x1A
0005bf c13a      	RJMP _0x2120003
                 _0x2040003:
0005c0 d262      	RCALL SUBOPT_0x2B
0005c1 35a4      	CPI  R26,LOW(0x54)
0005c2 e0e0      	LDI  R30,HIGH(0x54)
0005c3 07be      	CPC  R27,R30
0005c4 f01c      	BRLT _0x2040004
0005c5 e5e3      	LDI  R30,LOW(83)
0005c6 e0f0      	LDI  R31,HIGH(83)
0005c7 c132      	RJMP _0x2120003
                 _0x2040004:
0005c8 81e8      	LD   R30,Y
0005c9 81f9      	LDD  R31,Y+1
0005ca c12f      	RJMP _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
0005cb d252      	RCALL SUBOPT_0x2A
0005cc f014      	BRLT _0x2040005
0005cd d1f9      	RCALL SUBOPT_0x1A
0005ce c12b      	RJMP _0x2120003
                 _0x2040005:
0005cf d253      	RCALL SUBOPT_0x2B
0005d0 97d0      	SBIW R26,48
0005d1 f01c      	BRLT _0x2040006
0005d2 e2ef      	LDI  R30,LOW(47)
0005d3 e0f0      	LDI  R31,HIGH(47)
0005d4 c125      	RJMP _0x2120003
                 _0x2040006:
0005d5 81e8      	LD   R30,Y
0005d6 81f9      	LDD  R31,Y+1
0005d7 c122      	RJMP _0x2120003
                 ; .FEND
                 _glcd_getcharw_G102:
                 ; .FSTART _glcd_getcharw_G102
0005d8 d1de      	RCALL SUBOPT_0x16
0005d9 9723      	SBIW R28,3
0005da d24b      	RCALL SUBOPT_0x2C
0005db 018f      	MOVW R16,R30
0005dc 2e00      	MOV  R0,R16
0005dd 2a01      	OR   R0,R17
0005de f411      	BRNE _0x204000B
0005df d1e7      	RCALL SUBOPT_0x1A
0005e0 c052      	RJMP _0x2120006
                 _0x204000B:
0005e1 d24a      	RCALL SUBOPT_0x2D
0005e2 820f      	STD  Y+7,R0
0005e3 d248      	RCALL SUBOPT_0x2D
0005e4 820e      	STD  Y+6,R0
0005e5 d246      	RCALL SUBOPT_0x2D
0005e6 8608      	STD  Y+8,R0
0005e7 85eb      	LDD  R30,Y+11
0005e8 85a8      	LDD  R26,Y+8
0005e9 17ea      	CP   R30,R26
0005ea f410      	BRSH _0x204000C
0005eb d1db      	RCALL SUBOPT_0x1A
0005ec c046      	RJMP _0x2120006
                 _0x204000C:
0005ed 01f8      	MOVW R30,R16
                +
0005ee 5f0f     +SUBI R16 , LOW ( - 1 )
0005ef 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0005f0 9154      	LPM  R21,Z
0005f1 85a8      	LDD  R26,Y+8
0005f2 27bb      	CLR  R27
0005f3 27ee      	CLR  R30
0005f4 0fa5      	ADD  R26,R21
0005f5 1fbe      	ADC  R27,R30
0005f6 85eb      	LDD  R30,Y+11
0005f7 e0f0      	LDI  R31,0
0005f8 17ea      	CP   R30,R26
0005f9 07fb      	CPC  R31,R27
0005fa f010      	BRLO _0x204000D
0005fb d1cb      	RCALL SUBOPT_0x1A
0005fc c036      	RJMP _0x2120006
                 _0x204000D:
0005fd 81ee      	LDD  R30,Y+6
0005fe d1a2      	RCALL SUBOPT_0x11
0005ff 2f4e      	MOV  R20,R30
000600 81ee      	LDD  R30,Y+6
000601 70e7      	ANDI R30,LOW(0x7)
000602 f009      	BREQ _0x204000E
000603 5f4f      	SUBI R20,-LOW(1)
                 _0x204000E:
000604 81ef      	LDD  R30,Y+7
000605 30e0      	CPI  R30,0
000606 f081      	BREQ _0x204000F
000607 85a9      	LDD  R26,Y+9
000608 85ba      	LDD  R27,Y+9+1
000609 93ec      	ST   X,R30
00060a 85a8      	LDD  R26,Y+8
00060b 85eb      	LDD  R30,Y+11
00060c 1bea      	SUB  R30,R26
00060d e0f0      	LDI  R31,0
00060e 01df      	MOVW R26,R30
00060f 81ef      	LDD  R30,Y+7
000610 d1c0      	RCALL SUBOPT_0x1D
000611 01df      	MOVW R26,R30
000612 2fe4      	MOV  R30,R20
000613 d1bd      	RCALL SUBOPT_0x1D
000614 0fe0      	ADD  R30,R16
000615 1ff1      	ADC  R31,R17
000616 c01c      	RJMP _0x2120006
                 _0x204000F:
000617 0198      	MOVW R18,R16
000618 2fe5      	MOV  R30,R21
000619 e0f0      	LDI  R31,0
                +
00061a 0f0e     +ADD R16 , R30
00061b 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2040010:
00061c 85a8      	LDD  R26,Y+8
00061d 5faf      	SUBI R26,-LOW(1)
00061e 87a8      	STD  Y+8,R26
00061f 50a1      	SUBI R26,LOW(1)
000620 85eb      	LDD  R30,Y+11
000621 17ae      	CP   R26,R30
000622 f450      	BRSH _0x2040012
000623 01f9      	MOVW R30,R18
                +
000624 5f2f     +SUBI R18 , LOW ( - 1 )
000625 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000626 91a4      	LPM  R26,Z
000627 e0b0      	LDI  R27,0
000628 2fe4      	MOV  R30,R20
000629 d1a7      	RCALL SUBOPT_0x1D
                +
00062a 0f0e     +ADD R16 , R30
00062b 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00062c cfef      	RJMP _0x2040010
                 _0x2040012:
00062d 01f9      	MOVW R30,R18
00062e 91e4      	LPM  R30,Z
00062f 85a9      	LDD  R26,Y+9
000630 85ba      	LDD  R27,Y+9+1
000631 93ec      	ST   X,R30
000632 01f8      	MOVW R30,R16
                 _0x2120006:
000633 d262      	RCALL __LOADLOCR6
000634 962c      	ADIW R28,12
000635 9508      	RET
                 ; .FEND
                 _glcd_new_line_G102:
                 ; .FSTART _glcd_new_line_G102
000636 e0e0      	LDI  R30,LOW(0)
                +
000637 93e0 0185+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000639 91a0 0186+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00063b 27bb      	CLR  R27
00063c d1f4      	RCALL SUBOPT_0x2E
00063d d18f      	RCALL SUBOPT_0x1C
                +
00063e 91e0 018a+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000640 d18c      	RCALL SUBOPT_0x1C
000641 df89      	RCALL _glcd_clipy
                +
000642 93e0 0186+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000644 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000645 93aa      	ST   -Y,R26
000646 9721      	SBIW R28,1
000647 d1de      	RCALL SUBOPT_0x2C
000648 9730      	SBIW R30,0
000649 f409      	BRNE PC+2
00064a c04c      	RJMP _0x204001F
00064b 81af      	LDD  R26,Y+7
00064c 30aa      	CPI  R26,LOW(0xA)
00064d f409      	BRNE _0x2040020
00064e c046      	RJMP _0x2040021
                 _0x2040020:
00064f 81ef      	LDD  R30,Y+7
000650 93ea      	ST   -Y,R30
000651 01de      	MOVW R26,R28
000652 9617      	ADIW R26,7
000653 df84      	RCALL _glcd_getcharw_G102
000654 01af      	MOVW R20,R30
000655 9730      	SBIW R30,0
000656 f409      	BRNE _0x2040022
000657 c041      	RJMP _0x2120004
                 _0x2040022:
                +
000658 91e0 0189+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00065a 81ae      	LDD  R26,Y+6
00065b 0fea      	ADD  R30,R26
00065c 2f3e      	MOV  R19,R30
                +
00065d 91a0 0185+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
00065f 27bb      	CLR  R27
000660 d144      	RCALL SUBOPT_0x12
000661 018f      	MOVW R16,R30
                +
000662 3505     +CPI R16 , LOW ( 85 )
000663 e0e0     +LDI R30 , HIGH ( 85 )
000664 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000665 f018      	BRLO _0x2040023
000666 2f03      	MOV  R16,R19
000667 2711      	CLR  R17
000668 dfcd      	RCALL _glcd_new_line_G102
                 _0x2040023:
                +
000669 91e0 0185+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00066b d1cc      	RCALL SUBOPT_0x2F
00066c 85e8      	LDD  R30,Y+8
00066d 93ea      	ST   -Y,R30
00066e d1c2      	RCALL SUBOPT_0x2E
00066f 93ea      	ST   -Y,R30
000670 e0e1      	LDI  R30,LOW(1)
000671 93ea      	ST   -Y,R30
000672 935a      	ST   -Y,R21
000673 934a      	ST   -Y,R20
000674 e0a7      	LDI  R26,LOW(7)
000675 ddab      	RCALL _glcd_block
                +
000676 91e0 0185+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000678 81ae      	LDD  R26,Y+6
000679 0fea      	ADD  R30,R26
00067a d1bd      	RCALL SUBOPT_0x2F
                +
00067b 91e0 0189+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00067d 93ea      	ST   -Y,R30
00067e d1b2      	RCALL SUBOPT_0x2E
00067f 93ea      	ST   -Y,R30
000680 d0d9      	RCALL SUBOPT_0x0
000681 d1bb      	RCALL SUBOPT_0x30
                +
000682 91e0 0185+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000684 93ea      	ST   -Y,R30
                +
000685 91a0 0186+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000687 d1a9      	RCALL SUBOPT_0x2E
000688 0fea      	ADD  R30,R26
000689 93ea      	ST   -Y,R30
00068a 933a      	ST   -Y,R19
                +
00068b 91e0 018a+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00068d 93ea      	ST   -Y,R30
00068e d0cb      	RCALL SUBOPT_0x0
00068f d1ad      	RCALL SUBOPT_0x30
000690 e5e4      	LDI  R30,LOW(84)
000691 e0f0      	LDI  R31,HIGH(84)
000692 17e0      	CP   R30,R16
000693 07f1      	CPC  R31,R17
000694 f411      	BRNE _0x2040024
                 _0x2040021:
000695 dfa0      	RCALL _glcd_new_line_G102
000696 c002      	RJMP _0x2120004
                 _0x2040024:
                 _0x204001F:
                +
000697 9300 0185+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120004:
000699 d1fc      	RCALL __LOADLOCR6
                 _0x2120005:
00069a 9628      	ADIW R28,8
00069b 9508      	RET
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
00069c d11a      	RCALL SUBOPT_0x16
00069d 931a      	ST   -Y,R17
                 _0x204002E:
00069e 81a9      	LDD  R26,Y+1
00069f 81ba      	LDD  R27,Y+1+1
0006a0 91ed      	LD   R30,X+
0006a1 83a9      	STD  Y+1,R26
0006a2 83ba      	STD  Y+1+1,R27
0006a3 2f1e      	MOV  R17,R30
0006a4 30e0      	CPI  R30,0
0006a5 f019      	BREQ _0x2040030
0006a6 2fa1      	MOV  R26,R17
0006a7 df9d      	RCALL _glcd_putchar
0006a8 cff5      	RJMP _0x204002E
                 _0x2040030:
0006a9 8118      	LDD  R17,Y+0
0006aa c090      	RJMP _0x2120002
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
0006ab 93aa      	ST   -Y,R26
0006ac 81a9      	LDD  R26,Y+1
0006ad 27bb      	CLR  R27
0006ae df0d      	RCALL _glcd_clipx
                +
0006af 93e0 0185+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
0006b1 81a8      	LD   R26,Y
0006b2 27bb      	CLR  R27
0006b3 df17      	RCALL _glcd_clipy
                +
0006b4 93e0 0186+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0006b6 c043      	RJMP _0x2120003
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
0006b7 d0ff      	RCALL SUBOPT_0x16
0006b8 91a9          ld   r26,y+
0006b9 91b9          ld   r27,y+
0006ba 91e9          ld   r30,y+
0006bb 91f9          ld   r31,y+
0006bc 9630          adiw r30,0
0006bd f42a          brpl __itoa0
0006be 95e0          com  r30
0006bf 95f0          com  r31
0006c0 9631          adiw r30,1
0006c1 e26d          ldi  r22,'-'
0006c2 936d          st   x+,r22
                 __itoa0:
0006c3 94e8          clt
0006c4 e180          ldi  r24,low(10000)
0006c5 e297          ldi  r25,high(10000)
0006c6 d00d          rcall __itoa1
0006c7 ee88          ldi  r24,low(1000)
0006c8 e093          ldi  r25,high(1000)
0006c9 d00a          rcall __itoa1
0006ca e684          ldi  r24,100
0006cb 2799          clr  r25
0006cc d007          rcall __itoa1
0006cd e08a          ldi  r24,10
0006ce d005          rcall __itoa1
0006cf 2f6e          mov  r22,r30
0006d0 d010          rcall __itoa5
0006d1 2766          clr  r22
0006d2 936c          st   x,r22
0006d3 9508          ret
                 
                 __itoa1:
0006d4 2766          clr	 r22
                 __itoa2:
0006d5 17e8          cp   r30,r24
0006d6 07f9          cpc  r31,r25
0006d7 f020          brlo __itoa3
0006d8 9563          inc  r22
0006d9 1be8          sub  r30,r24
0006da 0bf9          sbc  r31,r25
0006db f7c9          brne __itoa2
                 __itoa3:
0006dc 2366          tst  r22
0006dd f411          brne __itoa4
0006de f016          brts __itoa5
0006df 9508          ret
                 __itoa4:
0006e0 9468          set
                 __itoa5:
0006e1 5d60          subi r22,-0x30
0006e2 936d          st   x+,r22
0006e3 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
0006e4 d0d2      	RCALL SUBOPT_0x16
0006e5 81b9          ldd  r27,y+1
0006e6 81a8          ld   r26,y
0006e7 9610          adiw r26,0
0006e8 f031          breq memset1
0006e9 81fc          ldd  r31,y+4
0006ea 81eb          ldd  r30,y+3
0006eb 816a          ldd  r22,y+2
                 memset0:
0006ec 9361          st   z+,r22
0006ed 9711          sbiw r26,1
0006ee f7e9          brne memset0
                 memset1:
0006ef 81eb          ldd  r30,y+3
0006f0 81fc          ldd  r31,y+4
0006f1 9625      	ADIW R28,5
0006f2 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
0006f3 93aa      	ST   -Y,R26
0006f4 d096      	RCALL SUBOPT_0xD
0006f5 5ee4      	SUBI R30,LOW(-__glcd_mask*2)
0006f6 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0006f7 91a4      	LPM  R26,Z
0006f8 81e9      	LDD  R30,Y+1
0006f9 d151      	RCALL __LSLB12
                 _0x2120003:
0006fa 9622      	ADIW R28,2
0006fb 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
0006fc d062      	RCALL SUBOPT_0x2
0006fd 81e9      	LDD  R30,Y+1
0006fe 30e7      	CPI  R30,LOW(0x7)
0006ff f011      	BREQ _0x20E0007
000700 30ea      	CPI  R30,LOW(0xA)
000701 f419      	BRNE _0x20E0008
                 _0x20E0007:
000702 9110 0183 	LDS  R17,_glcd_state
000704 c009      	RJMP _0x20E0009
                 _0x20E0008:
000705 30e9      	CPI  R30,LOW(0x9)
000706 f419      	BRNE _0x20E000B
                +
000707 9110 0184+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000709 c004      	RJMP _0x20E0009
                 _0x20E000B:
00070a 30e8      	CPI  R30,LOW(0x8)
00070b f4a1      	BRNE _0x20E0005
                +
00070c 9110 0193+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20E0009:
                +
00070e 91e0 0184+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000710 30e0      	CPI  R30,0
000711 f049      	BREQ _0x20E000E
000712 3010      	CPI  R17,0
000713 f019      	BREQ _0x20E000F
000714 efef      	LDI  R30,LOW(255)
000715 8118      	LDD  R17,Y+0
000716 c024      	RJMP _0x2120002
                 _0x20E000F:
000717 81ea      	LDD  R30,Y+2
000718 95e0      	COM  R30
000719 8118      	LDD  R17,Y+0
00071a c020      	RJMP _0x2120002
                 _0x20E000E:
00071b 3010      	CPI  R17,0
00071c f419      	BRNE _0x20E0011
00071d e0e0      	LDI  R30,LOW(0)
00071e 8118      	LDD  R17,Y+0
00071f c01b      	RJMP _0x2120002
                 _0x20E0011:
                 _0x20E0005:
000720 81ea      	LDD  R30,Y+2
000721 8118      	LDD  R17,Y+0
000722 c018      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000723 d093      	RCALL SUBOPT_0x16
000724 81ea      	LDD  R30,Y+2
000725 30e1      	CPI  R30,LOW(0x1)
000726 f421      	BRNE _0x20E0015
000727 81e8      	LD   R30,Y
000728 81f9      	LDD  R31,Y+1
000729 91e4      	LPM  R30,Z
00072a c010      	RJMP _0x2120002
                 _0x20E0015:
00072b 30e2      	CPI  R30,LOW(0x2)
00072c f419      	BRNE _0x20E0016
00072d d0f5      	RCALL SUBOPT_0x2B
00072e d13f      	RCALL __EEPROMRDB
00072f c00b      	RJMP _0x2120002
                 _0x20E0016:
000730 30e3      	CPI  R30,LOW(0x3)
000731 f439      	BRNE _0x20E0018
000732 d0f0      	RCALL SUBOPT_0x2B
                +
000733 91e0 019c+LDS R30 , _glcd_state + ( 25 )
000735 91f0 019d+LDS R31 , _glcd_state + ( 25 ) + 1
000737 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000738 c002      	RJMP _0x2120002
                 _0x20E0018:
000739 d0e9      	RCALL SUBOPT_0x2B
00073a 91ec      	LD   R30,X
                 _0x2120002:
00073b 9623      	ADIW R28,3
00073c 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
00073d 93aa      	ST   -Y,R26
00073e 81eb      	LDD  R30,Y+3
00073f 30e0      	CPI  R30,0
000740 f429      	BRNE _0x20E001C
000741 81e8      	LD   R30,Y
000742 81a9      	LDD  R26,Y+1
000743 81ba      	LDD  R27,Y+1+1
000744 93ec      	ST   X,R30
000745 c012      	RJMP _0x20E001B
                 _0x20E001C:
000746 30e2      	CPI  R30,LOW(0x2)
000747 f429      	BRNE _0x20E001D
000748 81e8      	LD   R30,Y
000749 81a9      	LDD  R26,Y+1
00074a 81ba      	LDD  R27,Y+1+1
00074b d12e      	RCALL __EEPROMWRB
00074c c00b      	RJMP _0x20E001B
                 _0x20E001D:
00074d 30e3      	CPI  R30,LOW(0x3)
00074e f449      	BRNE _0x20E001B
00074f 81e9      	LDD  R30,Y+1
000750 81fa      	LDD  R31,Y+1+1
000751 d078      	RCALL SUBOPT_0x1B
000752 81aa      	LDD  R26,Y+2
                +
000753 91e0 019e+LDS R30 , _glcd_state + ( 27 )
000755 91f0 019f+LDS R31 , _glcd_state + ( 27 ) + 1
000757 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20E001B:
                 _0x2120001:
000758 9624      	ADIW R28,4
000759 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000183           	.BYTE 0x1D
                 _glcd_buff:
0001a0           	.BYTE 0x96
                 _receive:
000236           	.BYTE 0x8
                 _gfx_addr_G101:
00023e           	.BYTE 0x2
                 _gfx_buffer_G101:
000240           	.BYTE 0x1F8
                 __seed_G104:
000438           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
00075a e0e0      	LDI  R30,LOW(0)
00075b 93ea      	ST   -Y,R30
00075c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
00075d e0a0      	LDI  R26,LOW(0)
00075e cf4c      	RJMP _glcd_moveto
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
00075f 93aa      	ST   -Y,R26
000760 931a      	ST   -Y,R17
000761 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
                +
000762 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000763 958a     +DEC R24
000764 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000765 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000766 9a93      	SBI  0x12,3
000767 dffa      	RCALL SUBOPT_0x3
000768 e0e0      	LDI  R30,0
000769 9982      	SBIC 0x10,2
00076a e0e1      	LDI  R30,1
00076b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
00076c 93aa      	ST   -Y,R26
00076d 9895      	CBI  0x12,5
00076e 81e9      	LDD  R30,Y+1
00076f 62e0      	ORI  R30,0x20
000770 2fae      	MOV  R26,R30
000771 da73      	RCALL _SPI_RW
000772 81a8      	LD   R26,Y
000773 ca71      	RJMP _SPI_RW
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x6:
000774 9a95      	SBI  0x12,5
                +
000775 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000776 958a     +DEC R24
000777 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000778 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
000779 81a8      	LD   R26,Y
00077a ca6a      	RJMP _SPI_RW
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
00077b da69      	RCALL _SPI_RW
00077c e4a8      	LDI  R26,LOW(72)
00077d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00077e e1e0      	LDI  R30,LOW(16)
00077f 93ea      	ST   -Y,R30
000780 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA:
000781 93ea      	ST   -Y,R30
000782 e0af      	LDI  R26,LOW(15)
000783 ca91      	RJMP _RF_Write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000784 e0f0      	LDI  R31,0
000785 93ed      	ST   X+,R30
000786 93fc      	ST   X,R31
000787 ca75      	RJMP _SPI_Read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000788 81e9      	LDD  R30,Y+1
000789 30e0      	CPI  R30,0
00078a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
00078b 81e8      	LD   R30,Y
00078c e0f0      	LDI  R31,0
00078d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
00078e efaf      	LDI  R26,LOW(255)
00078f e0b0      	LDI  R27,HIGH(255)
000790 d0d6      	RCALL __SWAPW12
000791 1bea      	SUB  R30,R26
000792 0bfb      	SBC  R31,R27
000793 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xF:
000794 93ea      	ST   -Y,R30
000795 e0e1      	LDI  R30,LOW(1)
000796 93ea      	ST   -Y,R30
000797 e0a0      	LDI  R26,LOW(0)
000798 cb07      	RJMP _control_motor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x10:
000799 93fa      	ST   -Y,R31
00079a 93ea      	ST   -Y,R30
00079b eaa0      	LDI  R26,LOW(_glcd_buff)
00079c e0b1      	LDI  R27,HIGH(_glcd_buff)
00079d df19      	RCALL _itoa
00079e eaa0      	LDI  R26,LOW(_glcd_buff)
00079f e0b1      	LDI  R27,HIGH(_glcd_buff)
0007a0 cefb      	RJMP _glcd_outtext
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11:
0007a1 95e6      	LSR  R30
0007a2 95e6      	LSR  R30
0007a3 95e6      	LSR  R30
0007a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
0007a5 e0f0      	LDI  R31,0
0007a6 0fea      	ADD  R30,R26
0007a7 1ffb      	ADC  R31,R27
0007a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
0007a9 2fae      	MOV  R26,R30
0007aa cb7e      	RJMP _pcd8544_wrcmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
0007ab 5ce0      	SUBI R30,LOW(-_gfx_buffer_G101)
0007ac 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G101)
0007ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x15:
0007ae e3ae      	LDI  R26,LOW(_gfx_addr_G101)
0007af e0b2      	LDI  R27,HIGH(_gfx_addr_G101)
0007b0 91ed      	LD   R30,X+
0007b1 91fd      	LD   R31,X+
0007b2 9631      	ADIW R30,1
0007b3 93fe      	ST   -X,R31
0007b4 93ee      	ST   -X,R30
0007b5 9731      	SBIW R30,1
0007b6 cff4      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
0007b7 93ba      	ST   -Y,R27
0007b8 93aa      	ST   -Y,R26
0007b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
0007ba 81ec      	LDD  R30,Y+4
0007bb 81fd      	LDD  R31,Y+4+1
0007bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
                +
0007bd 93e0 0187+STS _glcd_state + ( 4 ) , R30
0007bf 93f0 0188+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0007c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
                +
0007c2 93e0 019c+STS _glcd_state + ( 25 ) , R30
0007c4 93f0 019d+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0007c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1A:
0007c7 e0e0      	LDI  R30,LOW(0)
0007c8 e0f0      	LDI  R31,HIGH(0)
0007c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
0007ca 93fa      	ST   -Y,R31
0007cb 93ea      	ST   -Y,R30
0007cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1C:
0007cd e0f0      	LDI  R31,0
0007ce 0fae      	ADD  R26,R30
0007cf 1fbf      	ADC  R27,R31
0007d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
0007d1 e0f0      	LDI  R31,0
0007d2 d088      	RCALL __MULW12U
0007d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1E:
0007d4 83ee      	STD  Y+6,R30
0007d5 83ff      	STD  Y+6+1,R31
0007d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1F:
0007d7 85ec      	LDD  R30,Y+12
0007d8 93ea      	ST   -Y,R30
0007d9 81ef      	LDD  R30,Y+7
0007da 85f8      	LDD  R31,Y+7+1
0007db 9631      	ADIW R30,1
0007dc 83ef      	STD  Y+7,R30
0007dd 87f8      	STD  Y+7+1,R31
0007de 9731      	SBIW R30,1
0007df dfea      	RCALL SUBOPT_0x1B
0007e0 e0a0      	LDI  R26,LOW(0)
0007e1 cf5b      	RJMP _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
0007e2 930a      	ST   -Y,R16
0007e3 89a8      	LDD  R26,Y+16
0007e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x21:
0007e5 5f1f      	SUBI R17,-1
0007e6 85ee      	LDD  R30,Y+14
0007e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x22:
0007e8 85ec      	LDD  R30,Y+12
0007e9 93ea      	ST   -Y,R30
0007ea 81ef      	LDD  R30,Y+7
0007eb 85f8      	LDD  R31,Y+7+1
0007ec 9631      	ADIW R30,1
0007ed 83ef      	STD  Y+7,R30
0007ee 87f8      	STD  Y+7+1,R31
0007ef 9731      	SBIW R30,1
0007f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x23:
0007f1 2766      	CLR  R22
0007f2 2777      	CLR  R23
0007f3 01df      	MOVW R26,R30
0007f4 01cb      	MOVW R24,R22
0007f5 cf2d      	RJMP _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x24:
0007f6 935a      	ST   -Y,R21
0007f7 85aa      	LDD  R26,Y+10
0007f8 cf03      	RJMP _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x25:
0007f9 930a      	ST   -Y,R16
0007fa 9503      	INC  R16
0007fb 89e8      	LDD  R30,Y+16
0007fc 93ea      	ST   -Y,R30
0007fd 935a      	ST   -Y,R21
0007fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x26:
0007ff 2f5e      	MOV  R21,R30
000800 85ec      	LDD  R30,Y+12
000801 93ea      	ST   -Y,R30
000802 81af      	LDD  R26,Y+7
000803 85b8      	LDD  R27,Y+7+1
000804 2788      	CLR  R24
000805 2799      	CLR  R25
000806 df1c      	RCALL _glcd_readmem
000807 2e1e      	MOV  R1,R30
000808 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
000809 95e0      	COM  R30
00080a 21e1      	AND  R30,R1
00080b 2b5e      	OR   R21,R30
00080c cfdb      	RJMP SUBOPT_0x22
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x28:
00080d 930a      	ST   -Y,R16
00080e 9503      	INC  R16
00080f 89e8      	LDD  R30,Y+16
000810 93ea      	ST   -Y,R30
000811 85ee      	LDD  R30,Y+14
000812 93ea      	ST   -Y,R30
000813 85e9      	LDD  R30,Y+9
000814 85fa      	LDD  R31,Y+9+1
000815 9631      	ADIW R30,1
000816 87e9      	STD  Y+9,R30
000817 87fa      	STD  Y+9+1,R31
000818 9731      	SBIW R30,1
000819 cfd7      	RJMP SUBOPT_0x23
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
00081a 93ea      	ST   -Y,R30
00081b 934a      	ST   -Y,R20
00081c 85ad      	LDD  R26,Y+13
00081d cbcc      	RJMP _pcd8544_wrmasked_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
00081e df98      	RCALL SUBOPT_0x16
00081f 81a8      	LD   R26,Y
000820 81b9      	LDD  R27,Y+1
000821 d069      	RCALL __CPW02
000822 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2B:
000823 81a8      	LD   R26,Y
000824 81b9      	LDD  R27,Y+1
000825 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2C:
000826 d068      	RCALL __SAVELOCR6
                +
000827 91e0 0187+LDS R30 , _glcd_state + ( 4 )
000829 91f0 0188+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
00082b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2D:
00082c 01f8      	MOVW R30,R16
                +
00082d 5f0f     +SUBI R16 , LOW ( - 1 )
00082e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00082f 9004      	LPM  R0,Z
000830 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2E:
                +
000831 91e0 0187+LDS R30 , _glcd_state + ( 4 )
000833 91f0 0188+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000835 9631      	ADIW R30,1
000836 91e4      	LPM  R30,Z
000837 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
000838 93ea      	ST   -Y,R30
                +
000839 91e0 0186+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
00083b 93ea      	ST   -Y,R30
00083c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
00083d df89      	RCALL SUBOPT_0x1A
00083e df8b      	RCALL SUBOPT_0x1B
00083f e0a9      	LDI  R26,LOW(9)
000840 cbe0      	RJMP _glcd_block
                 
                 
                 	.CSEG
                 _delay_ms:
000841 9610      	adiw r26,0
000842 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000843 ed80     +LDI R24 , LOW ( 0x7D0 )
000844 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000845 9701     +SBIW R24 , 1
000846 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000847 95a8      	wdr
000848 9711      	sbiw r26,1
000849 f7c9      	brne __delay_ms0
                 __delay_ms1:
00084a 9508      	ret
                 
                 __LSLB12:
00084b 23ee      	TST  R30
00084c 2e0e      	MOV  R0,R30
00084d 2fea      	MOV  R30,R26
00084e f019      	BREQ __LSLB12R
                 __LSLB12L:
00084f 0fee      	LSL  R30
000850 940a      	DEC  R0
000851 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000852 9508      	RET
                 
                 __LSRB12:
000853 23ee      	TST  R30
000854 2e0e      	MOV  R0,R30
000855 2fea      	MOV  R30,R26
000856 f019      	BREQ __LSRB12R
                 __LSRB12L:
000857 95e6      	LSR  R30
000858 940a      	DEC  R0
000859 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
00085a 9508      	RET
                 
                 __MULW12U:
00085b 9ffa      	MUL  R31,R26
00085c 2df0      	MOV  R31,R0
00085d 9feb      	MUL  R30,R27
00085e 0df0      	ADD  R31,R0
00085f 9fea      	MUL  R30,R26
000860 2de0      	MOV  R30,R0
000861 0df1      	ADD  R31,R1
000862 9508      	RET
                 
                 __GETW1P:
000863 91ed      	LD   R30,X+
000864 91fc      	LD   R31,X
000865 9711      	SBIW R26,1
000866 9508      	RET
                 
                 __SWAPW12:
000867 2e1b      	MOV  R1,R27
000868 2fbf      	MOV  R27,R31
000869 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00086a 2e1a      	MOV  R1,R26
00086b 2fae      	MOV  R26,R30
00086c 2de1      	MOV  R30,R1
00086d 9508      	RET
                 
                 __EEPROMRDB:
00086e 99e1      	SBIC EECR,EEWE
00086f cffe      	RJMP __EEPROMRDB
000870 93ff      	PUSH R31
000871 b7ff      	IN   R31,SREG
000872 94f8      	CLI
000873 bbae      	OUT  EEARL,R26
000874 bbbf      	OUT  EEARH,R27
000875 9ae0      	SBI  EECR,EERE
000876 b3ed      	IN   R30,EEDR
000877 bfff      	OUT  SREG,R31
000878 91ff      	POP  R31
000879 9508      	RET
                 
                 __EEPROMWRB:
00087a 9be1      	SBIS EECR,EEWE
00087b c002      	RJMP __EEPROMWRB1
00087c 95a8      	WDR
00087d cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00087e b79f      	IN   R25,SREG
00087f 94f8      	CLI
000880 bbae      	OUT  EEARL,R26
000881 bbbf      	OUT  EEARH,R27
000882 9ae0      	SBI  EECR,EERE
000883 b38d      	IN   R24,EEDR
000884 17e8      	CP   R30,R24
000885 f019      	BREQ __EEPROMWRB0
000886 bbed      	OUT  EEDR,R30
000887 9ae2      	SBI  EECR,EEMWE
000888 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000889 bf9f      	OUT  SREG,R25
00088a 9508      	RET
                 
                 __CPW02:
00088b 2400      	CLR  R0
00088c 160a      	CP   R0,R26
00088d 060b      	CPC  R0,R27
00088e 9508      	RET
                 
                 __SAVELOCR6:
00088f 935a      	ST   -Y,R21
                 __SAVELOCR5:
000890 934a      	ST   -Y,R20
                 __SAVELOCR4:
000891 933a      	ST   -Y,R19
                 __SAVELOCR3:
000892 932a      	ST   -Y,R18
                 __SAVELOCR2:
000893 931a      	ST   -Y,R17
000894 930a      	ST   -Y,R16
000895 9508      	RET
                 
                 __LOADLOCR6:
000896 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000897 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000898 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000899 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00089a 8119      	LDD  R17,Y+1
00089b 8108      	LD   R16,Y
00089c 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  21 r1 :   8 r2 :   0 r3 :   0 r4 :   4 r5 :   1 r6 :   1 r7 :   2 
r8 :   1 r9 :   1 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  40 r17:  69 r18:  26 r19:  28 r20:  17 r21:  31 r22:  16 r23:   1 
r24:  29 r25:  12 r26: 245 r27:  60 r28:  16 r29:   1 r30: 588 r31:  93 
x  :  21 y  : 341 z  :  24 
Registers used: 27 out of 35 (77.1%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   7 add   :  13 
adiw  :  21 and   :   7 andi  :  12 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  27 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   4 brmi  :   0 brne  :  72 brpl  :   1 brsh  :  19 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :  24 
cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 clr   :  21 
cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   8 cp    :  21 
cpc   :   9 cpi   :  67 cpse  :   0 dec   :   7 des   :   0 eor   :   1 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 in    :   5 
inc   :   4 ld    :  35 ldd   : 188 ldi   : 204 lds   :  36 lpm   :  23 
lsl   :   4 lsr   :   9 mov   :  83 movw  :  21 mul   :   4 muls  :   0 
mulsu :   0 neg   :   0 nop   :   0 or    :   6 ori   :   9 out   :  53 
pop   :  11 push  :  11 rcall : 301 ret   :  63 reti  :   1 rjmp  : 152 
rol   :   0 ror   :   0 sbc   :   2 sbci  :   7 sbi   :  29 sbic  :   3 
sbis  :   2 sbiw  :  23 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 
seh   :   0 sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   1 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    : 109 std   :  39 
sts   :  22 sub   :   8 subi  :  24 swap  :   0 tst   :   3 wdr   :   2 

Instructions used: 59 out of 114 (51.8%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00113a   3804    606   4410    8192  53.8%
[.dseg] 0x000060 0x00043c      0    732    732    1024  71.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 10 warnings
